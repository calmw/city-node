{"id":"f4f830c5a7d901b81a4c03a379df11a5","_format":"hh-sol-build-info-1","solcVersion":"0.8.13","solcLongVersion":"0.8.13+commit.abaa5c0e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSetUpgradeable {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/CityNode.sol":{"content":""},"contracts/RoleAccess.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\";\n\ncontract AdminRoleUpgrade {\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\n \n    EnumerableSetUpgradeable.AddressSet private _admins;\n\n    event AdminAdded(address indexed account);\n    event AdminRemoved(address indexed account);\n\n    modifier onlyAdmin() {\n        require(\n            isAdmin(msg.sender),\n            \"AdminRole: caller does not have the Admin role\"\n        );\n        _;\n    }\n\n    function isAdmin(address account) public view returns (bool) {\n        return _admins.contains(account);\n    }\n\n    function allAdmins() public view returns (address[] memory admins) {\n        admins = new address[](_admins.length());\n        for (uint256 i = 0; i < _admins.length(); i++) {\n            admins[i] = _admins.at(i);\n        }\n    }\n\n    function batchAddAdmin(address[] memory amounts) public onlyAdmin{\n        for(uint256 i=0; i < amounts.length; i++){\n            addAdmin(amounts[i]);\n        }\n    }\n\n    function addAdmin(address account) public onlyAdmin {\n        _addAdmin(account);\n    }\n\n    function removeAdmin(address account) public onlyAdmin {\n        _removeAdmin(account);\n    }\n\n    function renounceAdmin() public {\n        _removeAdmin(msg.sender);\n    }\n\n    function _addAdmin(address account) internal {\n        _admins.add(account);\n        emit AdminAdded(account);\n    }\n    \n    function _removeAdmin(address account) internal {\n        _admins.remove(account);\n        emit AdminRemoved(account);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/CityNode.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/CityNode.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.13;\"\n--> contracts/CityNode.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.13;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/CityNode.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","exportedSymbols":{"EnumerableSetUpgradeable":[612]},"id":613,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSetUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"230:1098:0","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":612,"linearizedBaseContracts":[612],"name":"EnumerableSetUpgradeable","nameLocation":"1337:24:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSetUpgradeable.Set","id":10,"members":[{"constant":false,"id":5,"mutability":"mutable","name":"_values","nameLocation":"1872:7:0","nodeType":"VariableDeclaration","scope":10,"src":"1862:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1862:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4,"nodeType":"ArrayTypeName","src":"1862:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"_indexes","nameLocation":"2040:8:0","nodeType":"VariableDeclaration","scope":10,"src":"2012:36:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":8,"keyType":{"id":6,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2020:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2012:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":7,"name":"uint256","nodeType":"ElementaryTypeName","src":"2031:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1815:3:0","nodeType":"StructDefinition","scope":612,"src":"1808:247:0","visibility":"public"},{"body":{"id":51,"nodeType":"Block","src":"2294:335:0","statements":[{"condition":{"id":25,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2308:22:0","subExpression":{"arguments":[{"id":22,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"2319:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},{"id":23,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2324:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":21,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2309:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2309:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":49,"nodeType":"Block","src":"2586:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":47,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2607:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":20,"id":48,"nodeType":"Return","src":"2600:12:0"}]},"id":50,"nodeType":"IfStatement","src":"2304:319:0","trueBody":{"id":46,"nodeType":"Block","src":"2332:248:0","statements":[{"expression":{"arguments":[{"id":31,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2363:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":26,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"2346:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":29,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5,"src":"2346:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":30,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2346:16:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2346:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":33,"nodeType":"ExpressionStatement","src":"2346:23:0"},{"expression":{"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":34,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"2504:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":37,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":9,"src":"2504:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":38,"indexExpression":{"id":36,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2517:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2504:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":39,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"2526:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":40,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5,"src":"2526:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2526:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2504:40:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":43,"nodeType":"ExpressionStatement","src":"2504:40:0"},{"expression":{"hexValue":"74727565","id":44,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2565:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":20,"id":45,"nodeType":"Return","src":"2558:11:0"}]}}]},"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"2061:159:0","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":52,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2234:4:0","nodeType":"FunctionDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"set","nameLocation":"2251:3:0","nodeType":"VariableDeclaration","scope":52,"src":"2239:15:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":13,"nodeType":"UserDefinedTypeName","pathNode":{"id":12,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":10,"src":"2239:3:0"},"referencedDeclaration":10,"src":"2239:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":16,"mutability":"mutable","name":"value","nameLocation":"2264:5:0","nodeType":"VariableDeclaration","scope":52,"src":"2256:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2256:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2238:32:0"},"returnParameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":52,"src":"2288:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18,"name":"bool","nodeType":"ElementaryTypeName","src":"2288:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2287:6:0"},"scope":612,"src":"2225:404:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":135,"nodeType":"Block","src":"2869:1316:0","statements":[{"assignments":[64],"declarations":[{"constant":false,"id":64,"mutability":"mutable","name":"valueIndex","nameLocation":"2987:10:0","nodeType":"VariableDeclaration","scope":135,"src":"2979:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63,"name":"uint256","nodeType":"ElementaryTypeName","src":"2979:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":69,"initialValue":{"baseExpression":{"expression":{"id":65,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"3000:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":66,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":9,"src":"3000:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":68,"indexExpression":{"id":67,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"3013:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3000:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2979:40:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":70,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"3034:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3048:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3034:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":133,"nodeType":"Block","src":"4142:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4163:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":62,"id":132,"nodeType":"Return","src":"4156:12:0"}]},"id":134,"nodeType":"IfStatement","src":"3030:1149:0","trueBody":{"id":130,"nodeType":"Block","src":"3051:1085:0","statements":[{"assignments":[74],"declarations":[{"constant":false,"id":74,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3411:13:0","nodeType":"VariableDeclaration","scope":130,"src":"3403:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73,"name":"uint256","nodeType":"ElementaryTypeName","src":"3403:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":78,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":75,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"3427:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3440:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3427:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3403:38:0"},{"assignments":[80],"declarations":[{"constant":false,"id":80,"mutability":"mutable","name":"lastIndex","nameLocation":"3463:9:0","nodeType":"VariableDeclaration","scope":130,"src":"3455:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":79,"name":"uint256","nodeType":"ElementaryTypeName","src":"3455:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":86,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":81,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"3475:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":82,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5,"src":"3475:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3475:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":84,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3496:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3475:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3455:42:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":87,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3516:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":88,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"3529:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3516:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":114,"nodeType":"IfStatement","src":"3512:398:0","trueBody":{"id":113,"nodeType":"Block","src":"3544:366:0","statements":[{"assignments":[91],"declarations":[{"constant":false,"id":91,"mutability":"mutable","name":"lastValue","nameLocation":"3570:9:0","nodeType":"VariableDeclaration","scope":113,"src":"3562:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":90,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3562:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":96,"initialValue":{"baseExpression":{"expression":{"id":92,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"3582:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":93,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5,"src":"3582:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":95,"indexExpression":{"id":94,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3594:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3582:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3562:42:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":97,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"3704:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5,"src":"3704:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":101,"indexExpression":{"id":99,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"3716:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3704:26:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"3733:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3704:38:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":104,"nodeType":"ExpressionStatement","src":"3704:38:0"},{"expression":{"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":105,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"3816:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":9,"src":"3816:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":109,"indexExpression":{"id":107,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"3829:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3816:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":110,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"3842:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3816:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":112,"nodeType":"ExpressionStatement","src":"3816:36:0"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":115,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"3988:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":118,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5,"src":"3988:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3988:15:0","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3988:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":121,"nodeType":"ExpressionStatement","src":"3988:17:0"},{"expression":{"id":126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4073:26:0","subExpression":{"baseExpression":{"expression":{"id":122,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"4080:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":123,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":9,"src":"4080:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":125,"indexExpression":{"id":124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"4093:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4080:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"4073:26:0"},{"expression":{"hexValue":"74727565","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4121:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":62,"id":129,"nodeType":"Return","src":"4114:11:0"}]}}]},"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2635:157:0","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":136,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2806:7:0","nodeType":"FunctionDefinition","parameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"set","nameLocation":"2826:3:0","nodeType":"VariableDeclaration","scope":136,"src":"2814:15:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":55,"nodeType":"UserDefinedTypeName","pathNode":{"id":54,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":10,"src":"2814:3:0"},"referencedDeclaration":10,"src":"2814:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":58,"mutability":"mutable","name":"value","nameLocation":"2839:5:0","nodeType":"VariableDeclaration","scope":136,"src":"2831:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":57,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2831:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2813:32:0"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":136,"src":"2863:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":60,"name":"bool","nodeType":"ElementaryTypeName","src":"2863:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2862:6:0"},"scope":612,"src":"2797:1388:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":154,"nodeType":"Block","src":"4345:48:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":147,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"4362:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":9,"src":"4362:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":150,"indexExpression":{"id":149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"4375:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4362:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4362:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":146,"id":153,"nodeType":"Return","src":"4355:31:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"4191:70:0","text":" @dev Returns true if the value is in the set. O(1)."},"id":155,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4275:9:0","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"set","nameLocation":"4297:3:0","nodeType":"VariableDeclaration","scope":155,"src":"4285:15:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":139,"nodeType":"UserDefinedTypeName","pathNode":{"id":138,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":10,"src":"4285:3:0"},"referencedDeclaration":10,"src":"4285:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"value","nameLocation":"4310:5:0","nodeType":"VariableDeclaration","scope":155,"src":"4302:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4284:32:0"},"returnParameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":155,"src":"4339:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":144,"name":"bool","nodeType":"ElementaryTypeName","src":"4339:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4338:6:0"},"scope":612,"src":"4266:127:0","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":168,"nodeType":"Block","src":"4539:42:0","statements":[{"expression":{"expression":{"expression":{"id":164,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"4556:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5,"src":"4556:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4556:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":163,"id":167,"nodeType":"Return","src":"4549:25:0"}]},"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"4399:70:0","text":" @dev Returns the number of values on the set. O(1)."},"id":169,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:0","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"set","nameLocation":"4503:3:0","nodeType":"VariableDeclaration","scope":169,"src":"4491:15:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":158,"nodeType":"UserDefinedTypeName","pathNode":{"id":157,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":10,"src":"4491:3:0"},"referencedDeclaration":10,"src":"4491:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"4490:17:0"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":169,"src":"4530:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:0"},"scope":612,"src":"4474:107:0","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":185,"nodeType":"Block","src":"4999:42:0","statements":[{"expression":{"baseExpression":{"expression":{"id":180,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5016:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5,"src":"5016:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":183,"indexExpression":{"id":182,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"5028:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":179,"id":184,"nodeType":"Return","src":"5009:25:0"}]},"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"4587:331:0","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":186,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:0","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"set","nameLocation":"4948:3:0","nodeType":"VariableDeclaration","scope":186,"src":"4936:15:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":172,"nodeType":"UserDefinedTypeName","pathNode":{"id":171,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":10,"src":"4936:3:0"},"referencedDeclaration":10,"src":"4936:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"index","nameLocation":"4961:5:0","nodeType":"VariableDeclaration","scope":186,"src":"4953:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":186,"src":"4990:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:0"},"scope":612,"src":"4923:118:0","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":199,"nodeType":"Block","src":"5655:35:0","statements":[{"expression":{"expression":{"id":196,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"5672:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":5,"src":"5672:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":195,"id":198,"nodeType":"Return","src":"5665:18:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5047:529:0","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":200,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:0","nodeType":"FunctionDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"set","nameLocation":"5610:3:0","nodeType":"VariableDeclaration","scope":200,"src":"5598:15:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":189,"nodeType":"UserDefinedTypeName","pathNode":{"id":188,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":10,"src":"5598:3:0"},"referencedDeclaration":10,"src":"5598:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"5597:17:0"},"returnParameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":200,"src":"5637:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":193,"nodeType":"ArrayTypeName","src":"5637:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:0"},"scope":612,"src":"5581:109:0","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSetUpgradeable.Bytes32Set","id":204,"members":[{"constant":false,"id":203,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:0","nodeType":"VariableDeclaration","scope":204,"src":"5743:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":202,"nodeType":"UserDefinedTypeName","pathNode":{"id":201,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":10,"src":"5743:3:0"},"referencedDeclaration":10,"src":"5743:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:0","nodeType":"StructDefinition","scope":612,"src":"5715:45:0","visibility":"public"},{"body":{"id":221,"nodeType":"Block","src":"6006:47:0","statements":[{"expression":{"arguments":[{"expression":{"id":216,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"6028:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":203,"src":"6028:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6040:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":215,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"6023:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6023:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":214,"id":220,"nodeType":"Return","src":"6016:30:0"}]},"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"5766:159:0","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":222,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:0","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"set","nameLocation":"5962:3:0","nodeType":"VariableDeclaration","scope":222,"src":"5943:22:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":207,"nodeType":"UserDefinedTypeName","pathNode":{"id":206,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":204,"src":"5943:10:0"},"referencedDeclaration":204,"src":"5943:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":210,"mutability":"mutable","name":"value","nameLocation":"5975:5:0","nodeType":"VariableDeclaration","scope":222,"src":"5967:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:0"},"returnParameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":222,"src":"6000:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":212,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:0"},"scope":612,"src":"5930:123:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":239,"nodeType":"Block","src":"6300:50:0","statements":[{"expression":{"arguments":[{"expression":{"id":234,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"6325:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":203,"src":"6325:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"6337:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"6317:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6317:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":232,"id":238,"nodeType":"Return","src":"6310:33:0"}]},"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"6059:157:0","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":240,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"set","nameLocation":"6256:3:0","nodeType":"VariableDeclaration","scope":240,"src":"6237:22:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":225,"nodeType":"UserDefinedTypeName","pathNode":{"id":224,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":204,"src":"6237:10:0"},"referencedDeclaration":204,"src":"6237:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"value","nameLocation":"6269:5:0","nodeType":"VariableDeclaration","scope":240,"src":"6261:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:0"},"returnParameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":240,"src":"6294:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":230,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:0"},"scope":612,"src":"6221:129:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":257,"nodeType":"Block","src":"6517:52:0","statements":[{"expression":{"arguments":[{"expression":{"id":252,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6544:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":203,"src":"6544:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"6556:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":251,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"6534:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6534:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":250,"id":256,"nodeType":"Return","src":"6527:35:0"}]},"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"6356:70:0","text":" @dev Returns true if the value is in the set. O(1)."},"id":258,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:0","nodeType":"FunctionDefinition","parameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"set","nameLocation":"6468:3:0","nodeType":"VariableDeclaration","scope":258,"src":"6449:22:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":243,"nodeType":"UserDefinedTypeName","pathNode":{"id":242,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":204,"src":"6449:10:0"},"referencedDeclaration":204,"src":"6449:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"value","nameLocation":"6481:5:0","nodeType":"VariableDeclaration","scope":258,"src":"6473:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:0"},"returnParameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":258,"src":"6511:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":248,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:0"},"scope":612,"src":"6431:138:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":272,"nodeType":"Block","src":"6722:43:0","statements":[{"expression":{"arguments":[{"expression":{"id":268,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6747:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":203,"src":"6747:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":267,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"6739:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6739:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":266,"id":271,"nodeType":"Return","src":"6732:26:0"}]},"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"6575:70:0","text":" @dev Returns the number of values in the set. O(1)."},"id":273,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:0","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"set","nameLocation":"6685:3:0","nodeType":"VariableDeclaration","scope":273,"src":"6666:22:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":261,"nodeType":"UserDefinedTypeName","pathNode":{"id":260,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":204,"src":"6666:10:0"},"referencedDeclaration":204,"src":"6666:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:0"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":273,"src":"6713:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:0"},"scope":612,"src":"6650:115:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":290,"nodeType":"Block","src":"7190:46:0","statements":[{"expression":{"arguments":[{"expression":{"id":285,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"7211:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":203,"src":"7211:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":287,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"7223:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":284,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"7207:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7207:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":283,"id":289,"nodeType":"Return","src":"7200:29:0"}]},"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"6771:331:0","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":291,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:0","nodeType":"FunctionDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"set","nameLocation":"7138:3:0","nodeType":"VariableDeclaration","scope":291,"src":"7119:22:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":276,"nodeType":"UserDefinedTypeName","pathNode":{"id":275,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":204,"src":"7119:10:0"},"referencedDeclaration":204,"src":"7119:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":279,"mutability":"mutable","name":"index","nameLocation":"7151:5:0","nodeType":"VariableDeclaration","scope":291,"src":"7143:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:0"},"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":291,"src":"7181:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:0"},"scope":612,"src":"7107:129:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":320,"nodeType":"Block","src":"7857:219:0","statements":[{"assignments":[305],"declarations":[{"constant":false,"id":305,"mutability":"mutable","name":"store","nameLocation":"7884:5:0","nodeType":"VariableDeclaration","scope":320,"src":"7867:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":304,"nodeType":"ArrayTypeName","src":"7867:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":310,"initialValue":{"arguments":[{"expression":{"id":307,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"7900:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":203,"src":"7900:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":306,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"7892:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7892:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:0"},{"assignments":[315],"declarations":[{"constant":false,"id":315,"mutability":"mutable","name":"result","nameLocation":"7938:6:0","nodeType":"VariableDeclaration","scope":320,"src":"7921:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":314,"nodeType":"ArrayTypeName","src":"7921:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":316,"nodeType":"VariableDeclarationStatement","src":"7921:23:0"},{"AST":{"nodeType":"YulBlock","src":"8007:39:0","statements":[{"nodeType":"YulAssignment","src":"8021:15:0","value":{"name":"store","nodeType":"YulIdentifier","src":"8031:5:0"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8021:6:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":315,"isOffset":false,"isSlot":false,"src":"8021:6:0","valueSize":1},{"declaration":305,"isOffset":false,"isSlot":false,"src":"8031:5:0","valueSize":1}],"id":317,"nodeType":"InlineAssembly","src":"7998:48:0"},{"expression":{"id":318,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"8063:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":300,"id":319,"nodeType":"Return","src":"8056:13:0"}]},"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"7242:529:0","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":321,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:0","nodeType":"FunctionDefinition","parameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"set","nameLocation":"7811:3:0","nodeType":"VariableDeclaration","scope":321,"src":"7792:22:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":294,"nodeType":"UserDefinedTypeName","pathNode":{"id":293,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":204,"src":"7792:10:0"},"referencedDeclaration":204,"src":"7792:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$204_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:0"},"returnParameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":321,"src":"7839:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":298,"nodeType":"ArrayTypeName","src":"7839:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:0"},"scope":612,"src":"7776:300:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.AddressSet","id":325,"members":[{"constant":false,"id":324,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:0","nodeType":"VariableDeclaration","scope":325,"src":"8129:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":323,"nodeType":"UserDefinedTypeName","pathNode":{"id":322,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":10,"src":"8129:3:0"},"referencedDeclaration":10,"src":"8129:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:0","nodeType":"StructDefinition","scope":612,"src":"8101:45:0","visibility":"public"},{"body":{"id":351,"nodeType":"Block","src":"8392:74:0","statements":[{"expression":{"arguments":[{"expression":{"id":337,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"8414:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":324,"src":"8414:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"8450:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":343,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:0","typeDescriptions":{}}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8442:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:0","typeDescriptions":{}}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8434:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":339,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:0","typeDescriptions":{}}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8426:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":336,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"8409:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8409:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":335,"id":350,"nodeType":"Return","src":"8402:57:0"}]},"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"8152:159:0","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":352,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:0","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"set","nameLocation":"8348:3:0","nodeType":"VariableDeclaration","scope":352,"src":"8329:22:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":328,"nodeType":"UserDefinedTypeName","pathNode":{"id":327,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":325,"src":"8329:10:0"},"referencedDeclaration":325,"src":"8329:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"value","nameLocation":"8361:5:0","nodeType":"VariableDeclaration","scope":352,"src":"8353:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:0"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":352,"src":"8386:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":333,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:0"},"scope":612,"src":"8316:150:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":378,"nodeType":"Block","src":"8713:77:0","statements":[{"expression":{"arguments":[{"expression":{"id":364,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"8738:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":324,"src":"8738:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"8774:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":370,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:0","typeDescriptions":{}}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8766:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":368,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:0","typeDescriptions":{}}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8758:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:0","typeDescriptions":{}}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8750:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":363,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"8730:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8730:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":362,"id":377,"nodeType":"Return","src":"8723:60:0"}]},"documentation":{"id":353,"nodeType":"StructuredDocumentation","src":"8472:157:0","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":379,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:0","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"set","nameLocation":"8669:3:0","nodeType":"VariableDeclaration","scope":379,"src":"8650:22:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":355,"nodeType":"UserDefinedTypeName","pathNode":{"id":354,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":325,"src":"8650:10:0"},"referencedDeclaration":325,"src":"8650:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"value","nameLocation":"8682:5:0","nodeType":"VariableDeclaration","scope":379,"src":"8674:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:0"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":379,"src":"8707:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":360,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:0"},"scope":612,"src":"8634:156:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":405,"nodeType":"Block","src":"8957:79:0","statements":[{"expression":{"arguments":[{"expression":{"id":391,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"8984:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":324,"src":"8984:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"9020:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":397,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:0","typeDescriptions":{}}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9012:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:0","typeDescriptions":{}}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9004:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:0","typeDescriptions":{}}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8996:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":390,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"8974:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8974:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":389,"id":404,"nodeType":"Return","src":"8967:62:0"}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"8796:70:0","text":" @dev Returns true if the value is in the set. O(1)."},"id":406,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:0","nodeType":"FunctionDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"set","nameLocation":"8908:3:0","nodeType":"VariableDeclaration","scope":406,"src":"8889:22:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":382,"nodeType":"UserDefinedTypeName","pathNode":{"id":381,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":325,"src":"8889:10:0"},"referencedDeclaration":325,"src":"8889:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":385,"mutability":"mutable","name":"value","nameLocation":"8921:5:0","nodeType":"VariableDeclaration","scope":406,"src":"8913:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:0"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":406,"src":"8951:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":387,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:0"},"scope":612,"src":"8871:165:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":420,"nodeType":"Block","src":"9189:43:0","statements":[{"expression":{"arguments":[{"expression":{"id":416,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"9214:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":324,"src":"9214:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":415,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"9206:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9206:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":414,"id":419,"nodeType":"Return","src":"9199:26:0"}]},"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"9042:70:0","text":" @dev Returns the number of values in the set. O(1)."},"id":421,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:0","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"set","nameLocation":"9152:3:0","nodeType":"VariableDeclaration","scope":421,"src":"9133:22:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":409,"nodeType":"UserDefinedTypeName","pathNode":{"id":408,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":325,"src":"9133:10:0"},"referencedDeclaration":325,"src":"9133:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"9132:24:0"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":421,"src":"9180:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:0"},"scope":612,"src":"9117:115:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":447,"nodeType":"Block","src":"9657:73:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":439,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"9702:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":324,"src":"9702:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":441,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"9714:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":438,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"9698:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9698:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:0","typeDescriptions":{}}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9690:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":434,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:0","typeDescriptions":{}}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9682:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:0","typeDescriptions":{}}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9674:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":431,"id":446,"nodeType":"Return","src":"9667:56:0"}]},"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"9238:331:0","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":448,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:0","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"set","nameLocation":"9605:3:0","nodeType":"VariableDeclaration","scope":448,"src":"9586:22:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":424,"nodeType":"UserDefinedTypeName","pathNode":{"id":423,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":325,"src":"9586:10:0"},"referencedDeclaration":325,"src":"9586:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"index","nameLocation":"9618:5:0","nodeType":"VariableDeclaration","scope":448,"src":"9610:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:0"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":448,"src":"9648:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:0"},"scope":612,"src":"9574:156:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":477,"nodeType":"Block","src":"10351:219:0","statements":[{"assignments":[462],"declarations":[{"constant":false,"id":462,"mutability":"mutable","name":"store","nameLocation":"10378:5:0","nodeType":"VariableDeclaration","scope":477,"src":"10361:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":461,"nodeType":"ArrayTypeName","src":"10361:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":467,"initialValue":{"arguments":[{"expression":{"id":464,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"10394:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":324,"src":"10394:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":463,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"10386:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10386:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:0"},{"assignments":[472],"declarations":[{"constant":false,"id":472,"mutability":"mutable","name":"result","nameLocation":"10432:6:0","nodeType":"VariableDeclaration","scope":477,"src":"10415:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":471,"nodeType":"ArrayTypeName","src":"10415:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":473,"nodeType":"VariableDeclarationStatement","src":"10415:23:0"},{"AST":{"nodeType":"YulBlock","src":"10501:39:0","statements":[{"nodeType":"YulAssignment","src":"10515:15:0","value":{"name":"store","nodeType":"YulIdentifier","src":"10525:5:0"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10515:6:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":472,"isOffset":false,"isSlot":false,"src":"10515:6:0","valueSize":1},{"declaration":462,"isOffset":false,"isSlot":false,"src":"10525:5:0","valueSize":1}],"id":474,"nodeType":"InlineAssembly","src":"10492:48:0"},{"expression":{"id":475,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"10557:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":457,"id":476,"nodeType":"Return","src":"10550:13:0"}]},"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"9736:529:0","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":478,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:0","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"set","nameLocation":"10305:3:0","nodeType":"VariableDeclaration","scope":478,"src":"10286:22:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":325,"src":"10286:10:0"},"referencedDeclaration":325,"src":"10286:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"10285:24:0"},"returnParameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":478,"src":"10333:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":455,"nodeType":"ArrayTypeName","src":"10333:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:0"},"scope":612,"src":"10270:300:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.UintSet","id":482,"members":[{"constant":false,"id":481,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:0","nodeType":"VariableDeclaration","scope":482,"src":"10617:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":480,"nodeType":"UserDefinedTypeName","pathNode":{"id":479,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":10,"src":"10617:3:0"},"referencedDeclaration":10,"src":"10617:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:0","nodeType":"StructDefinition","scope":612,"src":"10592:42:0","visibility":"public"},{"body":{"id":502,"nodeType":"Block","src":"10877:56:0","statements":[{"expression":{"arguments":[{"expression":{"id":494,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"10899:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":481,"src":"10899:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"10919:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:0","typeDescriptions":{}}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10911:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":493,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"10894:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10894:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":492,"id":501,"nodeType":"Return","src":"10887:39:0"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"10640:159:0","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":503,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:0","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"set","nameLocation":"10833:3:0","nodeType":"VariableDeclaration","scope":503,"src":"10817:19:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":485,"nodeType":"UserDefinedTypeName","pathNode":{"id":484,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":482,"src":"10817:7:0"},"referencedDeclaration":482,"src":"10817:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":488,"mutability":"mutable","name":"value","nameLocation":"10846:5:0","nodeType":"VariableDeclaration","scope":503,"src":"10838:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:0"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":503,"src":"10871:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":490,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:0"},"scope":612,"src":"10804:129:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":523,"nodeType":"Block","src":"11177:59:0","statements":[{"expression":{"arguments":[{"expression":{"id":515,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"11202:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":481,"src":"11202:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"11222:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:0","typeDescriptions":{}}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11214:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":514,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"11194:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11194:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":513,"id":522,"nodeType":"Return","src":"11187:42:0"}]},"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"10939:157:0","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":524,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:0","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"set","nameLocation":"11133:3:0","nodeType":"VariableDeclaration","scope":524,"src":"11117:19:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":506,"nodeType":"UserDefinedTypeName","pathNode":{"id":505,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":482,"src":"11117:7:0"},"referencedDeclaration":482,"src":"11117:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":509,"mutability":"mutable","name":"value","nameLocation":"11146:5:0","nodeType":"VariableDeclaration","scope":524,"src":"11138:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":508,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:0"},"returnParameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":524,"src":"11171:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":511,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:0"},"scope":612,"src":"11101:135:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":544,"nodeType":"Block","src":"11400:61:0","statements":[{"expression":{"arguments":[{"expression":{"id":536,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"11427:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":481,"src":"11427:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"11447:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:0","typeDescriptions":{}}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11439:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":535,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"11417:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11417:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":534,"id":543,"nodeType":"Return","src":"11410:44:0"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"11242:70:0","text":" @dev Returns true if the value is in the set. O(1)."},"id":545,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:0","nodeType":"FunctionDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"set","nameLocation":"11351:3:0","nodeType":"VariableDeclaration","scope":545,"src":"11335:19:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":527,"nodeType":"UserDefinedTypeName","pathNode":{"id":526,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":482,"src":"11335:7:0"},"referencedDeclaration":482,"src":"11335:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":530,"mutability":"mutable","name":"value","nameLocation":"11364:5:0","nodeType":"VariableDeclaration","scope":545,"src":"11356:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:0"},"returnParameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":545,"src":"11394:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":532,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:0"},"scope":612,"src":"11317:144:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":559,"nodeType":"Block","src":"11611:43:0","statements":[{"expression":{"arguments":[{"expression":{"id":555,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"11636:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":481,"src":"11636:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":554,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"11628:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11628:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":553,"id":558,"nodeType":"Return","src":"11621:26:0"}]},"documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"11467:70:0","text":" @dev Returns the number of values in the set. O(1)."},"id":560,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:0","nodeType":"FunctionDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"set","nameLocation":"11574:3:0","nodeType":"VariableDeclaration","scope":560,"src":"11558:19:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":548,"nodeType":"UserDefinedTypeName","pathNode":{"id":547,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":482,"src":"11558:7:0"},"referencedDeclaration":482,"src":"11558:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"11557:21:0"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":560,"src":"11602:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:0"},"scope":612,"src":"11542:112:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":580,"nodeType":"Block","src":"12076:55:0","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":574,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"12105:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":481,"src":"12105:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":576,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"12117:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":573,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"12101:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12101:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:0","typeDescriptions":{}}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12093:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":570,"id":579,"nodeType":"Return","src":"12086:38:0"}]},"documentation":{"id":561,"nodeType":"StructuredDocumentation","src":"11660:331:0","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":581,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:0","nodeType":"FunctionDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"set","nameLocation":"12024:3:0","nodeType":"VariableDeclaration","scope":581,"src":"12008:19:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":563,"nodeType":"UserDefinedTypeName","pathNode":{"id":562,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":482,"src":"12008:7:0"},"referencedDeclaration":482,"src":"12008:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"index","nameLocation":"12037:5:0","nodeType":"VariableDeclaration","scope":581,"src":"12029:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:0"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":581,"src":"12067:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":568,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:0"},"scope":612,"src":"11996:135:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":610,"nodeType":"Block","src":"12749:219:0","statements":[{"assignments":[595],"declarations":[{"constant":false,"id":595,"mutability":"mutable","name":"store","nameLocation":"12776:5:0","nodeType":"VariableDeclaration","scope":610,"src":"12759:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":594,"nodeType":"ArrayTypeName","src":"12759:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":600,"initialValue":{"arguments":[{"expression":{"id":597,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"12792:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":481,"src":"12792:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$10_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":596,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"12784:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12784:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:0"},{"assignments":[605],"declarations":[{"constant":false,"id":605,"mutability":"mutable","name":"result","nameLocation":"12830:6:0","nodeType":"VariableDeclaration","scope":610,"src":"12813:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":604,"nodeType":"ArrayTypeName","src":"12813:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":606,"nodeType":"VariableDeclarationStatement","src":"12813:23:0"},{"AST":{"nodeType":"YulBlock","src":"12899:39:0","statements":[{"nodeType":"YulAssignment","src":"12913:15:0","value":{"name":"store","nodeType":"YulIdentifier","src":"12923:5:0"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12913:6:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":605,"isOffset":false,"isSlot":false,"src":"12913:6:0","valueSize":1},{"declaration":595,"isOffset":false,"isSlot":false,"src":"12923:5:0","valueSize":1}],"id":607,"nodeType":"InlineAssembly","src":"12890:48:0"},{"expression":{"id":608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"12955:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":590,"id":609,"nodeType":"Return","src":"12948:13:0"}]},"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"12137:529:0","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":611,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:0","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"set","nameLocation":"12703:3:0","nodeType":"VariableDeclaration","scope":611,"src":"12687:19:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":584,"nodeType":"UserDefinedTypeName","pathNode":{"id":583,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":482,"src":"12687:7:0"},"referencedDeclaration":482,"src":"12687:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$482_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"12686:21:0"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":611,"src":"12731:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":588,"nodeType":"ArrayTypeName","src":"12731:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:0"},"scope":612,"src":"12671:297:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":613,"src":"1329:11641:0","usedErrors":[]}],"src":"205:12766:0"},"id":0},"contracts/CityNode.sol":{"ast":{"absolutePath":"contracts/CityNode.sol","exportedSymbols":{},"id":614,"nodeType":"SourceUnit","nodes":[],"src":"0:0:1"},"id":1},"contracts/RoleAccess.sol":{"ast":{"absolutePath":"contracts/RoleAccess.sol","exportedSymbols":{"AdminRoleUpgrade":[790],"EnumerableSetUpgradeable":[612]},"id":791,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":615,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","id":616,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":791,"sourceUnit":613,"src":"56:88:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"AdminRoleUpgrade","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":790,"linearizedBaseContracts":[790],"name":"AdminRoleUpgrade","nameLocation":"155:16:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":620,"libraryName":{"id":617,"name":"EnumerableSetUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":612,"src":"184:24:2"},"nodeType":"UsingForDirective","src":"178:71:2","typeName":{"id":619,"nodeType":"UserDefinedTypeName","pathNode":{"id":618,"name":"EnumerableSetUpgradeable.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":325,"src":"213:35:2"},"referencedDeclaration":325,"src":"213:35:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}}},{"constant":false,"id":623,"mutability":"mutable","name":"_admins","nameLocation":"300:7:2","nodeType":"VariableDeclaration","scope":790,"src":"256:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":622,"nodeType":"UserDefinedTypeName","pathNode":{"id":621,"name":"EnumerableSetUpgradeable.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":325,"src":"256:35:2"},"referencedDeclaration":325,"src":"256:35:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"private"},{"anonymous":false,"eventSelector":"44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e339","id":627,"name":"AdminAdded","nameLocation":"320:10:2","nodeType":"EventDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"347:7:2","nodeType":"VariableDeclaration","scope":627,"src":"331:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":624,"name":"address","nodeType":"ElementaryTypeName","src":"331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"330:25:2"},"src":"314:42:2"},{"anonymous":false,"eventSelector":"a3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f","id":631,"name":"AdminRemoved","nameLocation":"367:12:2","nodeType":"EventDefinition","parameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"396:7:2","nodeType":"VariableDeclaration","scope":631,"src":"380:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"380:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"379:25:2"},"src":"361:44:2"},{"body":{"id":642,"nodeType":"Block","src":"432:140:2","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":635,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"471:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"471:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":634,"name":"isAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"463:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"463:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041646d696e20726f6c65","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"496:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b8487d002a356d65129c7f2d6a4517d378d929ddd6beeb4c325c1ed9f8ec139b","typeString":"literal_string \"AdminRole: caller does not have the Admin role\""},"value":"AdminRole: caller does not have the Admin role"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b8487d002a356d65129c7f2d6a4517d378d929ddd6beeb4c325c1ed9f8ec139b","typeString":"literal_string \"AdminRole: caller does not have the Admin role\""}],"id":633,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"442:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"442:112:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":640,"nodeType":"ExpressionStatement","src":"442:112:2"},{"id":641,"nodeType":"PlaceholderStatement","src":"564:1:2"}]},"id":643,"name":"onlyAdmin","nameLocation":"420:9:2","nodeType":"ModifierDefinition","parameters":{"id":632,"nodeType":"ParameterList","parameters":[],"src":"429:2:2"},"src":"411:161:2","virtual":false,"visibility":"internal"},{"body":{"id":655,"nodeType":"Block","src":"639:49:2","statements":[{"expression":{"arguments":[{"id":652,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"673:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":650,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"656:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":406,"src":"656:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$325_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$325_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"656:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":649,"id":654,"nodeType":"Return","src":"649:32:2"}]},"functionSelector":"24d7806c","id":656,"implemented":true,"kind":"function","modifiers":[],"name":"isAdmin","nameLocation":"587:7:2","nodeType":"FunctionDefinition","parameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"account","nameLocation":"603:7:2","nodeType":"VariableDeclaration","scope":656,"src":"595:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"595:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"594:17:2"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":656,"src":"633:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":647,"name":"bool","nodeType":"ElementaryTypeName","src":"633:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"632:6:2"},"scope":790,"src":"578:110:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":695,"nodeType":"Block","src":"761:163:2","statements":[{"expression":{"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":662,"name":"admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"771:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":666,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"794:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":421,"src":"794:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$325_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$325_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"794:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"780:13:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":664,"nodeType":"ArrayTypeName","src":"784:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"780:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"771:40:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":671,"nodeType":"ExpressionStatement","src":"771:40:2"},{"body":{"id":693,"nodeType":"Block","src":"868:50:2","statements":[{"expression":{"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":684,"name":"admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"882:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":686,"indexExpression":{"id":685,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"889:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"882:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":689,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"905:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":687,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"894:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":448,"src":"894:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$325_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$325_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"894:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"882:25:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":692,"nodeType":"ExpressionStatement","src":"882:25:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":676,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"841:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":677,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"845:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":421,"src":"845:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$325_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$325_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"845:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"841:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":694,"initializationExpression":{"assignments":[673],"declarations":[{"constant":false,"id":673,"mutability":"mutable","name":"i","nameLocation":"834:1:2","nodeType":"VariableDeclaration","scope":694,"src":"826:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"826:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":675,"initialValue":{"hexValue":"30","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"838:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"826:13:2"},"loopExpression":{"expression":{"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"863:3:2","subExpression":{"id":681,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"863:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":683,"nodeType":"ExpressionStatement","src":"863:3:2"},"nodeType":"ForStatement","src":"821:97:2"}]},"functionSelector":"40f32be6","id":696,"implemented":true,"kind":"function","modifiers":[],"name":"allAdmins","nameLocation":"703:9:2","nodeType":"FunctionDefinition","parameters":{"id":657,"nodeType":"ParameterList","parameters":[],"src":"712:2:2"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"admins","nameLocation":"753:6:2","nodeType":"VariableDeclaration","scope":696,"src":"736:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"736:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":659,"nodeType":"ArrayTypeName","src":"736:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"735:25:2"},"scope":790,"src":"694:230:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":723,"nodeType":"Block","src":"995:102:2","statements":[{"body":{"id":721,"nodeType":"Block","src":"1046:45:2","statements":[{"expression":{"arguments":[{"baseExpression":{"id":716,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"1069:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":718,"indexExpression":{"id":717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"1077:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1069:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":715,"name":"addAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"1060:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1060:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":720,"nodeType":"ExpressionStatement","src":"1060:20:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":708,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"1022:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":709,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"1026:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1026:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":722,"initializationExpression":{"assignments":[705],"declarations":[{"constant":false,"id":705,"mutability":"mutable","name":"i","nameLocation":"1017:1:2","nodeType":"VariableDeclaration","scope":722,"src":"1009:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":704,"name":"uint256","nodeType":"ElementaryTypeName","src":"1009:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":707,"initialValue":{"hexValue":"30","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1019:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1009:11:2"},"loopExpression":{"expression":{"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1042:3:2","subExpression":{"id":712,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"1042:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":714,"nodeType":"ExpressionStatement","src":"1042:3:2"},"nodeType":"ForStatement","src":"1005:86:2"}]},"functionSelector":"2c9ab42b","id":724,"implemented":true,"kind":"function","modifiers":[{"id":702,"kind":"modifierInvocation","modifierName":{"id":701,"name":"onlyAdmin","nodeType":"IdentifierPath","referencedDeclaration":643,"src":"986:9:2"},"nodeType":"ModifierInvocation","src":"986:9:2"}],"name":"batchAddAdmin","nameLocation":"939:13:2","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"amounts","nameLocation":"970:7:2","nodeType":"VariableDeclaration","scope":724,"src":"953:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":697,"name":"address","nodeType":"ElementaryTypeName","src":"953:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":698,"nodeType":"ArrayTypeName","src":"953:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"952:26:2"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[],"src":"995:0:2"},"scope":790,"src":"930:167:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":735,"nodeType":"Block","src":"1155:35:2","statements":[{"expression":{"arguments":[{"id":732,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"1175:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":731,"name":"_addAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"1165:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1165:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"ExpressionStatement","src":"1165:18:2"}]},"functionSelector":"70480275","id":736,"implemented":true,"kind":"function","modifiers":[{"id":729,"kind":"modifierInvocation","modifierName":{"id":728,"name":"onlyAdmin","nodeType":"IdentifierPath","referencedDeclaration":643,"src":"1145:9:2"},"nodeType":"ModifierInvocation","src":"1145:9:2"}],"name":"addAdmin","nameLocation":"1112:8:2","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"account","nameLocation":"1129:7:2","nodeType":"VariableDeclaration","scope":736,"src":"1121:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"1121:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1120:17:2"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"1155:0:2"},"scope":790,"src":"1103:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":747,"nodeType":"Block","src":"1251:38:2","statements":[{"expression":{"arguments":[{"id":744,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"1274:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":743,"name":"_removeAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"1261:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1261:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"ExpressionStatement","src":"1261:21:2"}]},"functionSelector":"1785f53c","id":748,"implemented":true,"kind":"function","modifiers":[{"id":741,"kind":"modifierInvocation","modifierName":{"id":740,"name":"onlyAdmin","nodeType":"IdentifierPath","referencedDeclaration":643,"src":"1241:9:2"},"nodeType":"ModifierInvocation","src":"1241:9:2"}],"name":"removeAdmin","nameLocation":"1205:11:2","nodeType":"FunctionDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"account","nameLocation":"1225:7:2","nodeType":"VariableDeclaration","scope":748,"src":"1217:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"1217:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1216:17:2"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[],"src":"1251:0:2"},"scope":790,"src":"1196:93:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":756,"nodeType":"Block","src":"1327:41:2","statements":[{"expression":{"arguments":[{"expression":{"id":752,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1350:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1350:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":751,"name":"_removeAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"1337:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1337:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"ExpressionStatement","src":"1337:24:2"}]},"functionSelector":"8bad0c0a","id":757,"implemented":true,"kind":"function","modifiers":[],"name":"renounceAdmin","nameLocation":"1304:13:2","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[],"src":"1317:2:2"},"returnParameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"1327:0:2"},"scope":790,"src":"1295:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":772,"nodeType":"Block","src":"1419:71:2","statements":[{"expression":{"arguments":[{"id":765,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"1441:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":762,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"1429:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":352,"src":"1429:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$325_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$325_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1429:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":767,"nodeType":"ExpressionStatement","src":"1429:20:2"},{"eventCall":{"arguments":[{"id":769,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"1475:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":768,"name":"AdminAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"1464:10:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1464:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"EmitStatement","src":"1459:24:2"}]},"id":773,"implemented":true,"kind":"function","modifiers":[],"name":"_addAdmin","nameLocation":"1383:9:2","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":759,"mutability":"mutable","name":"account","nameLocation":"1401:7:2","nodeType":"VariableDeclaration","scope":773,"src":"1393:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"1393:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1392:17:2"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[],"src":"1419:0:2"},"scope":790,"src":"1374:116:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":788,"nodeType":"Block","src":"1548:76:2","statements":[{"expression":{"arguments":[{"id":781,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"1573:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":778,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"1558:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$325_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":379,"src":"1558:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$325_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$325_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1558:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":783,"nodeType":"ExpressionStatement","src":"1558:23:2"},{"eventCall":{"arguments":[{"id":785,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"1609:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":784,"name":"AdminRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"1596:12:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1596:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":787,"nodeType":"EmitStatement","src":"1591:26:2"}]},"id":789,"implemented":true,"kind":"function","modifiers":[],"name":"_removeAdmin","nameLocation":"1509:12:2","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"account","nameLocation":"1530:7:2","nodeType":"VariableDeclaration","scope":789,"src":"1522:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"1522:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1521:17:2"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"1548:0:2"},"scope":790,"src":"1500:124:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":791,"src":"146:1480:2","usedErrors":[]}],"src":"32:1595:2"},"id":2}},"contracts":{"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"EnumerableSetUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203b1333cbc4370c1d3d787a4c2965b229e51151640ab3c862c0bcc874d94807d864736f6c634300080d0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE SGT CALLER 0xCB 0xC4 CALLDATACOPY 0xC SAR RETURNDATASIZE PUSH25 0x7A4C2965B229E51151640AB3C862C0BCC874D94807D864736F PUSH13 0x634300080D0033000000000000 ","sourceMap":"1329:11641:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203b1333cbc4370c1d3d787a4c2965b229e51151640ab3c862c0bcc874d94807d864736f6c634300080d0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE SGT CALLER 0xCB 0xC4 CALLDATACOPY 0xC SAR RETURNDATASIZE PUSH25 0x7A4C2965B229E51151640AB3C862C0BCC874D94807D864736F PUSH13 0x634300080D0033000000000000 ","sourceMap":"1329:11641:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":\"EnumerableSetUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]}},\"version\":1}"}},"contracts/RoleAccess.sol":{"AdminRoleUpgrade":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"AdminAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"AdminRemoved","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"addAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"allAdmins","outputs":[{"internalType":"address[]","name":"admins","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"amounts","type":"address[]"}],"name":"batchAddAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"removeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610bee806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631785f53c1461006757806324d7806c146100835780632c9ab42b146100b357806340f32be6146100cf57806370480275146100ed5780638bad0c0a14610109575b600080fd5b610081600480360381019061007c919061071d565b610113565b005b61009d6004803603810190610098919061071d565b610167565b6040516100aa9190610765565b60405180910390f35b6100cd60048036038101906100c891906108d9565b610184565b005b6100d7610212565b6040516100e491906109e0565b60405180910390f35b6101076004803603810190610102919061071d565b6102f4565b005b610111610348565b005b61011c33610167565b61015b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015290610a85565b60405180910390fd5b61016481610353565b50565b600061017d8260006103ae90919063ffffffff16565b9050919050565b61018d33610167565b6101cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c390610a85565b60405180910390fd5b60005b815181101561020e576101fb8282815181106101ee576101ed610aa5565b5b60200260200101516102f4565b808061020690610b0d565b9150506101cf565b5050565b606061021e60006103de565b67ffffffffffffffff81111561023757610236610796565b5b6040519080825280602002602001820160405280156102655781602001602082028036833780820191505090505b50905060005b61027560006103de565b8110156102f0576102908160006103f390919063ffffffff16565b8282815181106102a3576102a2610aa5565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806102e890610b0d565b91505061026b565b5090565b6102fd33610167565b61033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033390610a85565b60405180910390fd5b6103458161040d565b50565b61035133610353565b565b61036781600061046890919063ffffffff16565b508073ffffffffffffffffffffffffffffffffffffffff167fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f60405160405180910390a250565b60006103d6836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610498565b905092915050565b60006103ec826000016104bb565b9050919050565b600061040283600001836104cc565b60001c905092915050565b6104218160006104f790919063ffffffff16565b508073ffffffffffffffffffffffffffffffffffffffff167f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33960405160405180910390a250565b6000610490836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610527565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b60008260000182815481106104e4576104e3610aa5565b5b9060005260206000200154905092915050565b600061051f836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61063b565b905092915050565b6000808360010160008481526020019081526020016000205490506000811461062f5760006001826105599190610b55565b90506000600186600001805490506105719190610b55565b90508181146105e057600086600001828154811061059257610591610aa5565b5b90600052602060002001549050808760000184815481106105b6576105b5610aa5565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806105f4576105f3610b89565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610635565b60009150505b92915050565b60006106478383610498565b6106a05782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506106a5565b600090505b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106ea826106bf565b9050919050565b6106fa816106df565b811461070557600080fd5b50565b600081359050610717816106f1565b92915050565b600060208284031215610733576107326106b5565b5b600061074184828501610708565b91505092915050565b60008115159050919050565b61075f8161074a565b82525050565b600060208201905061077a6000830184610756565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107ce82610785565b810181811067ffffffffffffffff821117156107ed576107ec610796565b5b80604052505050565b60006108006106ab565b905061080c82826107c5565b919050565b600067ffffffffffffffff82111561082c5761082b610796565b5b602082029050602081019050919050565b600080fd5b600061085561085084610811565b6107f6565b905080838252602082019050602084028301858111156108785761087761083d565b5b835b818110156108a1578061088d8882610708565b84526020840193505060208101905061087a565b5050509392505050565b600082601f8301126108c0576108bf610780565b5b81356108d0848260208601610842565b91505092915050565b6000602082840312156108ef576108ee6106b5565b5b600082013567ffffffffffffffff81111561090d5761090c6106ba565b5b610919848285016108ab565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610957816106df565b82525050565b6000610969838361094e565b60208301905092915050565b6000602082019050919050565b600061098d82610922565b610997818561092d565b93506109a28361093e565b8060005b838110156109d35781516109ba888261095d565b97506109c583610975565b9250506001810190506109a6565b5085935050505092915050565b600060208201905081810360008301526109fa8184610982565b905092915050565b600082825260208201905092915050565b7f41646d696e526f6c653a2063616c6c657220646f6573206e6f7420686176652060008201527f7468652041646d696e20726f6c65000000000000000000000000000000000000602082015250565b6000610a6f602e83610a02565b9150610a7a82610a13565b604082019050919050565b60006020820190508181036000830152610a9e81610a62565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b6000610b1882610b03565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b4a57610b49610ad4565b5b600182019050919050565b6000610b6082610b03565b9150610b6b83610b03565b925082821015610b7e57610b7d610ad4565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220749f1268488159916731399fd4b995fb804e10e1837d84c3461358e71843b33064736f6c634300080d0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBEE DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1785F53C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x2C9AB42B EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x40F32BE6 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x8BAD0C0A EQ PUSH2 0x109 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x167 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x765 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x111 PUSH2 0x348 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11C CALLER PUSH2 0x167 JUMP JUMPDEST PUSH2 0x15B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152 SWAP1 PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x164 DUP2 PUSH2 0x353 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D DUP3 PUSH1 0x0 PUSH2 0x3AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D CALLER PUSH2 0x167 JUMP JUMPDEST PUSH2 0x1CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C3 SWAP1 PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x20E JUMPI PUSH2 0x1FB DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1EE JUMPI PUSH2 0x1ED PUSH2 0xAA5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2F4 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x206 SWAP1 PUSH2 0xB0D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1CF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x21E PUSH1 0x0 PUSH2 0x3DE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x237 JUMPI PUSH2 0x236 PUSH2 0x796 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x265 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0x275 PUSH1 0x0 PUSH2 0x3DE JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2F0 JUMPI PUSH2 0x290 DUP2 PUSH1 0x0 PUSH2 0x3F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A3 JUMPI PUSH2 0x2A2 PUSH2 0xAA5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x2E8 SWAP1 PUSH2 0xB0D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x2FD CALLER PUSH2 0x167 JUMP JUMPDEST PUSH2 0x33C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x333 SWAP1 PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x345 DUP2 PUSH2 0x40D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x351 CALLER PUSH2 0x353 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x367 DUP2 PUSH1 0x0 PUSH2 0x468 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D6 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x498 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC DUP3 PUSH1 0x0 ADD PUSH2 0x4BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x402 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x421 DUP2 PUSH1 0x0 PUSH2 0x4F7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x490 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x527 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4E4 JUMPI PUSH2 0x4E3 PUSH2 0xAA5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51F DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x63B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x62F JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x559 SWAP2 SWAP1 PUSH2 0xB55 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x571 SWAP2 SWAP1 PUSH2 0xB55 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x592 JUMPI PUSH2 0x591 PUSH2 0xAA5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x5B6 JUMPI PUSH2 0x5B5 PUSH2 0xAA5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x5F4 JUMPI PUSH2 0x5F3 PUSH2 0xB89 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x635 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x647 DUP4 DUP4 PUSH2 0x498 JUMP JUMPDEST PUSH2 0x6A0 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EA DUP3 PUSH2 0x6BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FA DUP2 PUSH2 0x6DF JUMP JUMPDEST DUP2 EQ PUSH2 0x705 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x717 DUP2 PUSH2 0x6F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x733 JUMPI PUSH2 0x732 PUSH2 0x6B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x741 DUP5 DUP3 DUP6 ADD PUSH2 0x708 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75F DUP2 PUSH2 0x74A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x77A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x7CE DUP3 PUSH2 0x785 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x7ED JUMPI PUSH2 0x7EC PUSH2 0x796 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x800 PUSH2 0x6AB JUMP JUMPDEST SWAP1 POP PUSH2 0x80C DUP3 DUP3 PUSH2 0x7C5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x82C JUMPI PUSH2 0x82B PUSH2 0x796 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x855 PUSH2 0x850 DUP5 PUSH2 0x811 JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x878 JUMPI PUSH2 0x877 PUSH2 0x83D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8A1 JUMPI DUP1 PUSH2 0x88D DUP9 DUP3 PUSH2 0x708 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x87A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8C0 JUMPI PUSH2 0x8BF PUSH2 0x780 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x842 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8EF JUMPI PUSH2 0x8EE PUSH2 0x6B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x90D JUMPI PUSH2 0x90C PUSH2 0x6BA JUMP JUMPDEST JUMPDEST PUSH2 0x919 DUP5 DUP3 DUP6 ADD PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x957 DUP2 PUSH2 0x6DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x969 DUP4 DUP4 PUSH2 0x94E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98D DUP3 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x997 DUP2 DUP6 PUSH2 0x92D JUMP JUMPDEST SWAP4 POP PUSH2 0x9A2 DUP4 PUSH2 0x93E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9D3 JUMPI DUP2 MLOAD PUSH2 0x9BA DUP9 DUP3 PUSH2 0x95D JUMP JUMPDEST SWAP8 POP PUSH2 0x9C5 DUP4 PUSH2 0x975 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x9A6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9FA DUP2 DUP5 PUSH2 0x982 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E526F6C653A2063616C6C657220646F6573206E6F74206861766520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7468652041646D696E20726F6C65000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6F PUSH1 0x2E DUP4 PUSH2 0xA02 JUMP JUMPDEST SWAP2 POP PUSH2 0xA7A DUP3 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA9E DUP2 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB18 DUP3 PUSH2 0xB03 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xB4A JUMPI PUSH2 0xB49 PUSH2 0xAD4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB60 DUP3 PUSH2 0xB03 JUMP JUMPDEST SWAP2 POP PUSH2 0xB6B DUP4 PUSH2 0xB03 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xB7E JUMPI PUSH2 0xB7D PUSH2 0xAD4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x9F1268488159916731399FD4B995FB804E10E1837D DUP5 0xC3 CHAINID SGT PC 0xE7 XOR NUMBER 0xB3 ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"146:1480:2:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_addAdmin_773":{"entryPoint":1037,"id":773,"parameterSlots":1,"returnSlots":0},"@_add_52":{"entryPoint":1595,"id":52,"parameterSlots":2,"returnSlots":1},"@_at_186":{"entryPoint":1228,"id":186,"parameterSlots":2,"returnSlots":1},"@_contains_155":{"entryPoint":1176,"id":155,"parameterSlots":2,"returnSlots":1},"@_length_169":{"entryPoint":1211,"id":169,"parameterSlots":1,"returnSlots":1},"@_removeAdmin_789":{"entryPoint":851,"id":789,"parameterSlots":1,"returnSlots":0},"@_remove_136":{"entryPoint":1319,"id":136,"parameterSlots":2,"returnSlots":1},"@addAdmin_736":{"entryPoint":756,"id":736,"parameterSlots":1,"returnSlots":0},"@add_352":{"entryPoint":1271,"id":352,"parameterSlots":2,"returnSlots":1},"@allAdmins_696":{"entryPoint":530,"id":696,"parameterSlots":0,"returnSlots":1},"@at_448":{"entryPoint":1011,"id":448,"parameterSlots":2,"returnSlots":1},"@batchAddAdmin_724":{"entryPoint":388,"id":724,"parameterSlots":1,"returnSlots":0},"@contains_406":{"entryPoint":942,"id":406,"parameterSlots":2,"returnSlots":1},"@isAdmin_656":{"entryPoint":359,"id":656,"parameterSlots":1,"returnSlots":1},"@length_421":{"entryPoint":990,"id":421,"parameterSlots":1,"returnSlots":1},"@removeAdmin_748":{"entryPoint":275,"id":748,"parameterSlots":1,"returnSlots":0},"@remove_379":{"entryPoint":1128,"id":379,"parameterSlots":2,"returnSlots":1},"@renounceAdmin_757":{"entryPoint":840,"id":757,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":2114,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1800,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":2219,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1821,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":2265,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":2397,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":2382,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":2434,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":1878,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_b8487d002a356d65129c7f2d6a4517d378d929ddd6beeb4c325c1ed9f8ec139b_to_t_string_memory_ptr_fromStack":{"entryPoint":2658,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":2528,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":1893,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b8487d002a356d65129c7f2d6a4517d378d929ddd6beeb4c325c1ed9f8ec139b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2693,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":2038,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1707,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":2065,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":2366,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":2338,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":2421,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":2349,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2562,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2901,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1759,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":1866,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1727,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2819,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1989,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":2829,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2772,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":2953,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2725,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1942,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1920,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":2109,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1722,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1717,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1925,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_b8487d002a356d65129c7f2d6a4517d378d929ddd6beeb4c325c1ed9f8ec139b":{"entryPoint":2579,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1777,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8851:3","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:3","statements":[{"nodeType":"YulAssignment","src":"57:19:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:3","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:3"},"nodeType":"YulFunctionCall","src":"67:9:3"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:3"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:3","type":""}],"src":"7:75:3"},{"body":{"nodeType":"YulBlock","src":"177:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:3"},"nodeType":"YulFunctionCall","src":"187:12:3"},"nodeType":"YulExpressionStatement","src":"187:12:3"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:3"},{"body":{"nodeType":"YulBlock","src":"300:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:3"},"nodeType":"YulFunctionCall","src":"310:12:3"},"nodeType":"YulExpressionStatement","src":"310:12:3"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:3"},{"body":{"nodeType":"YulBlock","src":"379:81:3","statements":[{"nodeType":"YulAssignment","src":"389:65:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:3"},"nodeType":"YulFunctionCall","src":"400:54:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:3"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:3","type":""}],"src":"334:126:3"},{"body":{"nodeType":"YulBlock","src":"511:51:3","statements":[{"nodeType":"YulAssignment","src":"521:35:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:3"},"nodeType":"YulFunctionCall","src":"532:24:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:3"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:3","type":""}],"src":"466:96:3"},{"body":{"nodeType":"YulBlock","src":"611:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:3"},"nodeType":"YulFunctionCall","src":"670:12:3"},"nodeType":"YulExpressionStatement","src":"670:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:3"},"nodeType":"YulFunctionCall","src":"641:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:3"},"nodeType":"YulFunctionCall","src":"631:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:3"},"nodeType":"YulFunctionCall","src":"624:43:3"},"nodeType":"YulIf","src":"621:63:3"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:3","type":""}],"src":"568:122:3"},{"body":{"nodeType":"YulBlock","src":"748:87:3","statements":[{"nodeType":"YulAssignment","src":"758:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:3"},"nodeType":"YulFunctionCall","src":"767:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:3"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:3"},"nodeType":"YulFunctionCall","src":"796:33:3"},"nodeType":"YulExpressionStatement","src":"796:33:3"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:3","type":""}],"src":"696:139:3"},{"body":{"nodeType":"YulBlock","src":"907:263:3","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:3"},"nodeType":"YulFunctionCall","src":"955:79:3"},"nodeType":"YulExpressionStatement","src":"955:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:3"},"nodeType":"YulFunctionCall","src":"924:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:3"},"nodeType":"YulFunctionCall","src":"920:32:3"},"nodeType":"YulIf","src":"917:119:3"},{"nodeType":"YulBlock","src":"1046:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:3"},"nodeType":"YulFunctionCall","src":"1121:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:3"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:3"},"nodeType":"YulFunctionCall","src":"1100:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:3"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:3","type":""}],"src":"841:329:3"},{"body":{"nodeType":"YulBlock","src":"1218:48:3","statements":[{"nodeType":"YulAssignment","src":"1228:32:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1253:5:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1246:6:3"},"nodeType":"YulFunctionCall","src":"1246:13:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1239:6:3"},"nodeType":"YulFunctionCall","src":"1239:21:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1228:7:3"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1200:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1210:7:3","type":""}],"src":"1176:90:3"},{"body":{"nodeType":"YulBlock","src":"1331:50:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1348:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1368:5:3"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1353:14:3"},"nodeType":"YulFunctionCall","src":"1353:21:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1341:6:3"},"nodeType":"YulFunctionCall","src":"1341:34:3"},"nodeType":"YulExpressionStatement","src":"1341:34:3"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1319:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1326:3:3","type":""}],"src":"1272:109:3"},{"body":{"nodeType":"YulBlock","src":"1479:118:3","statements":[{"nodeType":"YulAssignment","src":"1489:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1501:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1512:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1497:3:3"},"nodeType":"YulFunctionCall","src":"1497:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1489:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1563:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1576:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1587:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1572:3:3"},"nodeType":"YulFunctionCall","src":"1572:17:3"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1525:37:3"},"nodeType":"YulFunctionCall","src":"1525:65:3"},"nodeType":"YulExpressionStatement","src":"1525:65:3"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1451:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1463:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1474:4:3","type":""}],"src":"1387:210:3"},{"body":{"nodeType":"YulBlock","src":"1692:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1709:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1712:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1702:6:3"},"nodeType":"YulFunctionCall","src":"1702:12:3"},"nodeType":"YulExpressionStatement","src":"1702:12:3"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1603:117:3"},{"body":{"nodeType":"YulBlock","src":"1774:54:3","statements":[{"nodeType":"YulAssignment","src":"1784:38:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1802:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"1809:2:3","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1798:3:3"},"nodeType":"YulFunctionCall","src":"1798:14:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1818:2:3","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1814:3:3"},"nodeType":"YulFunctionCall","src":"1814:7:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1794:3:3"},"nodeType":"YulFunctionCall","src":"1794:28:3"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1784:6:3"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:3","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1767:6:3","type":""}],"src":"1726:102:3"},{"body":{"nodeType":"YulBlock","src":"1862:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1879:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1882:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1872:6:3"},"nodeType":"YulFunctionCall","src":"1872:88:3"},"nodeType":"YulExpressionStatement","src":"1872:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1976:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1979:4:3","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1969:6:3"},"nodeType":"YulFunctionCall","src":"1969:15:3"},"nodeType":"YulExpressionStatement","src":"1969:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2000:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2003:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1993:6:3"},"nodeType":"YulFunctionCall","src":"1993:15:3"},"nodeType":"YulExpressionStatement","src":"1993:15:3"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1834:180:3"},{"body":{"nodeType":"YulBlock","src":"2063:238:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2073:58:3","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2095:6:3"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2125:4:3"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2103:21:3"},"nodeType":"YulFunctionCall","src":"2103:27:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2091:3:3"},"nodeType":"YulFunctionCall","src":"2091:40:3"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2077:10:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"2242:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2244:16:3"},"nodeType":"YulFunctionCall","src":"2244:18:3"},"nodeType":"YulExpressionStatement","src":"2244:18:3"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2185:10:3"},{"kind":"number","nodeType":"YulLiteral","src":"2197:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2182:2:3"},"nodeType":"YulFunctionCall","src":"2182:34:3"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2221:10:3"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2233:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2218:2:3"},"nodeType":"YulFunctionCall","src":"2218:22:3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2179:2:3"},"nodeType":"YulFunctionCall","src":"2179:62:3"},"nodeType":"YulIf","src":"2176:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2280:2:3","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2284:10:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2273:6:3"},"nodeType":"YulFunctionCall","src":"2273:22:3"},"nodeType":"YulExpressionStatement","src":"2273:22:3"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2049:6:3","type":""},{"name":"size","nodeType":"YulTypedName","src":"2057:4:3","type":""}],"src":"2020:281:3"},{"body":{"nodeType":"YulBlock","src":"2348:88:3","statements":[{"nodeType":"YulAssignment","src":"2358:30:3","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2368:18:3"},"nodeType":"YulFunctionCall","src":"2368:20:3"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2358:6:3"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2417:6:3"},{"name":"size","nodeType":"YulIdentifier","src":"2425:4:3"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2397:19:3"},"nodeType":"YulFunctionCall","src":"2397:33:3"},"nodeType":"YulExpressionStatement","src":"2397:33:3"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2332:4:3","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2341:6:3","type":""}],"src":"2307:129:3"},{"body":{"nodeType":"YulBlock","src":"2524:229:3","statements":[{"body":{"nodeType":"YulBlock","src":"2629:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2631:16:3"},"nodeType":"YulFunctionCall","src":"2631:18:3"},"nodeType":"YulExpressionStatement","src":"2631:18:3"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2601:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"2609:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2598:2:3"},"nodeType":"YulFunctionCall","src":"2598:30:3"},"nodeType":"YulIf","src":"2595:56:3"},{"nodeType":"YulAssignment","src":"2661:25:3","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2673:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"2681:4:3","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2669:3:3"},"nodeType":"YulFunctionCall","src":"2669:17:3"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2661:4:3"}]},{"nodeType":"YulAssignment","src":"2723:23:3","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2735:4:3"},{"kind":"number","nodeType":"YulLiteral","src":"2741:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2731:3:3"},"nodeType":"YulFunctionCall","src":"2731:15:3"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2723:4:3"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2508:6:3","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2519:4:3","type":""}],"src":"2442:311:3"},{"body":{"nodeType":"YulBlock","src":"2848:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2865:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2868:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2858:6:3"},"nodeType":"YulFunctionCall","src":"2858:12:3"},"nodeType":"YulExpressionStatement","src":"2858:12:3"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"2759:117:3"},{"body":{"nodeType":"YulBlock","src":"3001:608:3","statements":[{"nodeType":"YulAssignment","src":"3011:90:3","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3093:6:3"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3036:56:3"},"nodeType":"YulFunctionCall","src":"3036:64:3"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3020:15:3"},"nodeType":"YulFunctionCall","src":"3020:81:3"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3011:5:3"}]},{"nodeType":"YulVariableDeclaration","src":"3110:16:3","value":{"name":"array","nodeType":"YulIdentifier","src":"3121:5:3"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3114:3:3","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3143:5:3"},{"name":"length","nodeType":"YulIdentifier","src":"3150:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3136:6:3"},"nodeType":"YulFunctionCall","src":"3136:21:3"},"nodeType":"YulExpressionStatement","src":"3136:21:3"},{"nodeType":"YulAssignment","src":"3166:23:3","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3177:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"3184:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3173:3:3"},"nodeType":"YulFunctionCall","src":"3173:16:3"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3166:3:3"}]},{"nodeType":"YulVariableDeclaration","src":"3199:44:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3217:6:3"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3229:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"3237:4:3","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3225:3:3"},"nodeType":"YulFunctionCall","src":"3225:17:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3213:3:3"},"nodeType":"YulFunctionCall","src":"3213:30:3"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3203:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"3271:103:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"3285:77:3"},"nodeType":"YulFunctionCall","src":"3285:79:3"},"nodeType":"YulExpressionStatement","src":"3285:79:3"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3258:6:3"},{"name":"end","nodeType":"YulIdentifier","src":"3266:3:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3255:2:3"},"nodeType":"YulFunctionCall","src":"3255:15:3"},"nodeType":"YulIf","src":"3252:122:3"},{"body":{"nodeType":"YulBlock","src":"3459:144:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3474:21:3","value":{"name":"src","nodeType":"YulIdentifier","src":"3492:3:3"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"3478:10:3","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3516:3:3"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"3542:10:3"},{"name":"end","nodeType":"YulIdentifier","src":"3554:3:3"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3521:20:3"},"nodeType":"YulFunctionCall","src":"3521:37:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3509:6:3"},"nodeType":"YulFunctionCall","src":"3509:50:3"},"nodeType":"YulExpressionStatement","src":"3509:50:3"},{"nodeType":"YulAssignment","src":"3572:21:3","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3583:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"3588:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3579:3:3"},"nodeType":"YulFunctionCall","src":"3579:14:3"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3572:3:3"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3412:3:3"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3417:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3409:2:3"},"nodeType":"YulFunctionCall","src":"3409:15:3"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3425:25:3","statements":[{"nodeType":"YulAssignment","src":"3427:21:3","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3438:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"3443:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3434:3:3"},"nodeType":"YulFunctionCall","src":"3434:14:3"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3427:3:3"}]}]},"pre":{"nodeType":"YulBlock","src":"3387:21:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3389:17:3","value":{"name":"offset","nodeType":"YulIdentifier","src":"3400:6:3"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3393:3:3","type":""}]}]},"src":"3383:220:3"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2971:6:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"2979:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"2987:3:3","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2995:5:3","type":""}],"src":"2899:710:3"},{"body":{"nodeType":"YulBlock","src":"3709:293:3","statements":[{"body":{"nodeType":"YulBlock","src":"3758:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3760:77:3"},"nodeType":"YulFunctionCall","src":"3760:79:3"},"nodeType":"YulExpressionStatement","src":"3760:79:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3737:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"3745:4:3","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3733:3:3"},"nodeType":"YulFunctionCall","src":"3733:17:3"},{"name":"end","nodeType":"YulIdentifier","src":"3752:3:3"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3729:3:3"},"nodeType":"YulFunctionCall","src":"3729:27:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3722:6:3"},"nodeType":"YulFunctionCall","src":"3722:35:3"},"nodeType":"YulIf","src":"3719:122:3"},{"nodeType":"YulVariableDeclaration","src":"3850:34:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3877:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3864:12:3"},"nodeType":"YulFunctionCall","src":"3864:20:3"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3854:6:3","type":""}]},{"nodeType":"YulAssignment","src":"3893:103:3","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3969:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"3977:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3965:3:3"},"nodeType":"YulFunctionCall","src":"3965:17:3"},{"name":"length","nodeType":"YulIdentifier","src":"3984:6:3"},{"name":"end","nodeType":"YulIdentifier","src":"3992:3:3"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3902:62:3"},"nodeType":"YulFunctionCall","src":"3902:94:3"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3893:5:3"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3687:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"3695:3:3","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3703:5:3","type":""}],"src":"3632:370:3"},{"body":{"nodeType":"YulBlock","src":"4099:448:3","statements":[{"body":{"nodeType":"YulBlock","src":"4145:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4147:77:3"},"nodeType":"YulFunctionCall","src":"4147:79:3"},"nodeType":"YulExpressionStatement","src":"4147:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4120:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"4129:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4116:3:3"},"nodeType":"YulFunctionCall","src":"4116:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"4141:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4112:3:3"},"nodeType":"YulFunctionCall","src":"4112:32:3"},"nodeType":"YulIf","src":"4109:119:3"},{"nodeType":"YulBlock","src":"4238:302:3","statements":[{"nodeType":"YulVariableDeclaration","src":"4253:45:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4284:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4295:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4280:3:3"},"nodeType":"YulFunctionCall","src":"4280:17:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4267:12:3"},"nodeType":"YulFunctionCall","src":"4267:31:3"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4257:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"4345:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4347:77:3"},"nodeType":"YulFunctionCall","src":"4347:79:3"},"nodeType":"YulExpressionStatement","src":"4347:79:3"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4317:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"4325:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4314:2:3"},"nodeType":"YulFunctionCall","src":"4314:30:3"},"nodeType":"YulIf","src":"4311:117:3"},{"nodeType":"YulAssignment","src":"4442:88:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4502:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"4513:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4498:3:3"},"nodeType":"YulFunctionCall","src":"4498:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4522:7:3"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4452:45:3"},"nodeType":"YulFunctionCall","src":"4452:78:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4442:6:3"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4069:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4080:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4092:6:3","type":""}],"src":"4008:539:3"},{"body":{"nodeType":"YulBlock","src":"4627:40:3","statements":[{"nodeType":"YulAssignment","src":"4638:22:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4654:5:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4648:5:3"},"nodeType":"YulFunctionCall","src":"4648:12:3"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4638:6:3"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4610:5:3","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4620:6:3","type":""}],"src":"4553:114:3"},{"body":{"nodeType":"YulBlock","src":"4784:73:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4801:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"4806:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4794:6:3"},"nodeType":"YulFunctionCall","src":"4794:19:3"},"nodeType":"YulExpressionStatement","src":"4794:19:3"},{"nodeType":"YulAssignment","src":"4822:29:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4841:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"4846:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4837:3:3"},"nodeType":"YulFunctionCall","src":"4837:14:3"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4822:11:3"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4756:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"4761:6:3","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4772:11:3","type":""}],"src":"4673:184:3"},{"body":{"nodeType":"YulBlock","src":"4935:60:3","statements":[{"nodeType":"YulAssignment","src":"4945:11:3","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4953:3:3"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4945:4:3"}]},{"nodeType":"YulAssignment","src":"4966:22:3","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4978:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"4983:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4974:3:3"},"nodeType":"YulFunctionCall","src":"4974:14:3"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4966:4:3"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4922:3:3","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4930:4:3","type":""}],"src":"4863:132:3"},{"body":{"nodeType":"YulBlock","src":"5056:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5073:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5096:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5078:17:3"},"nodeType":"YulFunctionCall","src":"5078:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5066:6:3"},"nodeType":"YulFunctionCall","src":"5066:37:3"},"nodeType":"YulExpressionStatement","src":"5066:37:3"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5044:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5051:3:3","type":""}],"src":"5001:108:3"},{"body":{"nodeType":"YulBlock","src":"5195:99:3","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5239:6:3"},{"name":"pos","nodeType":"YulIdentifier","src":"5247:3:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"5205:33:3"},"nodeType":"YulFunctionCall","src":"5205:46:3"},"nodeType":"YulExpressionStatement","src":"5205:46:3"},{"nodeType":"YulAssignment","src":"5260:28:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5278:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"5283:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5274:3:3"},"nodeType":"YulFunctionCall","src":"5274:14:3"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"5260:10:3"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"5168:6:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5176:3:3","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"5184:10:3","type":""}],"src":"5115:179:3"},{"body":{"nodeType":"YulBlock","src":"5375:38:3","statements":[{"nodeType":"YulAssignment","src":"5385:22:3","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5397:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"5402:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5393:3:3"},"nodeType":"YulFunctionCall","src":"5393:14:3"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"5385:4:3"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5362:3:3","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"5370:4:3","type":""}],"src":"5300:113:3"},{"body":{"nodeType":"YulBlock","src":"5573:608:3","statements":[{"nodeType":"YulVariableDeclaration","src":"5583:68:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5645:5:3"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5597:47:3"},"nodeType":"YulFunctionCall","src":"5597:54:3"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5587:6:3","type":""}]},{"nodeType":"YulAssignment","src":"5660:93:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5741:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"5746:6:3"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5667:73:3"},"nodeType":"YulFunctionCall","src":"5667:86:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5660:3:3"}]},{"nodeType":"YulVariableDeclaration","src":"5762:71:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5827:5:3"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5777:49:3"},"nodeType":"YulFunctionCall","src":"5777:56:3"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"5766:7:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5842:21:3","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"5856:7:3"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5846:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"5932:224:3","statements":[{"nodeType":"YulVariableDeclaration","src":"5946:34:3","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5973:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5967:5:3"},"nodeType":"YulFunctionCall","src":"5967:13:3"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"5950:13:3","type":""}]},{"nodeType":"YulAssignment","src":"5993:70:3","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"6044:13:3"},{"name":"pos","nodeType":"YulIdentifier","src":"6059:3:3"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"6000:43:3"},"nodeType":"YulFunctionCall","src":"6000:63:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5993:3:3"}]},{"nodeType":"YulAssignment","src":"6076:70:3","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6139:6:3"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6086:52:3"},"nodeType":"YulFunctionCall","src":"6086:60:3"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6076:6:3"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5894:1:3"},{"name":"length","nodeType":"YulIdentifier","src":"5897:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5891:2:3"},"nodeType":"YulFunctionCall","src":"5891:13:3"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5905:18:3","statements":[{"nodeType":"YulAssignment","src":"5907:14:3","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5916:1:3"},{"kind":"number","nodeType":"YulLiteral","src":"5919:1:3","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5912:3:3"},"nodeType":"YulFunctionCall","src":"5912:9:3"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5907:1:3"}]}]},"pre":{"nodeType":"YulBlock","src":"5876:14:3","statements":[{"nodeType":"YulVariableDeclaration","src":"5878:10:3","value":{"kind":"number","nodeType":"YulLiteral","src":"5887:1:3","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5882:1:3","type":""}]}]},"src":"5872:284:3"},{"nodeType":"YulAssignment","src":"6165:10:3","value":{"name":"pos","nodeType":"YulIdentifier","src":"6172:3:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6165:3:3"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5552:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5559:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5568:3:3","type":""}],"src":"5449:732:3"},{"body":{"nodeType":"YulBlock","src":"6335:225:3","statements":[{"nodeType":"YulAssignment","src":"6345:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6357:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6368:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6353:3:3"},"nodeType":"YulFunctionCall","src":"6353:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6345:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6392:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6403:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6388:3:3"},"nodeType":"YulFunctionCall","src":"6388:17:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6411:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"6417:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6407:3:3"},"nodeType":"YulFunctionCall","src":"6407:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6381:6:3"},"nodeType":"YulFunctionCall","src":"6381:47:3"},"nodeType":"YulExpressionStatement","src":"6381:47:3"},{"nodeType":"YulAssignment","src":"6437:116:3","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6539:6:3"},{"name":"tail","nodeType":"YulIdentifier","src":"6548:4:3"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6445:93:3"},"nodeType":"YulFunctionCall","src":"6445:108:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6437:4:3"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6307:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6319:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6330:4:3","type":""}],"src":"6187:373:3"},{"body":{"nodeType":"YulBlock","src":"6662:73:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6679:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"6684:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6672:6:3"},"nodeType":"YulFunctionCall","src":"6672:19:3"},"nodeType":"YulExpressionStatement","src":"6672:19:3"},{"nodeType":"YulAssignment","src":"6700:29:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6719:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"6724:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6715:3:3"},"nodeType":"YulFunctionCall","src":"6715:14:3"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6700:11:3"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6634:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"6639:6:3","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6650:11:3","type":""}],"src":"6566:169:3"},{"body":{"nodeType":"YulBlock","src":"6847:127:3","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6869:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"6877:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6865:3:3"},"nodeType":"YulFunctionCall","src":"6865:14:3"},{"hexValue":"41646d696e526f6c653a2063616c6c657220646f6573206e6f74206861766520","kind":"string","nodeType":"YulLiteral","src":"6881:34:3","type":"","value":"AdminRole: caller does not have "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6858:6:3"},"nodeType":"YulFunctionCall","src":"6858:58:3"},"nodeType":"YulExpressionStatement","src":"6858:58:3"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6937:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"6945:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6933:3:3"},"nodeType":"YulFunctionCall","src":"6933:15:3"},{"hexValue":"7468652041646d696e20726f6c65","kind":"string","nodeType":"YulLiteral","src":"6950:16:3","type":"","value":"the Admin role"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6926:6:3"},"nodeType":"YulFunctionCall","src":"6926:41:3"},"nodeType":"YulExpressionStatement","src":"6926:41:3"}]},"name":"store_literal_in_memory_b8487d002a356d65129c7f2d6a4517d378d929ddd6beeb4c325c1ed9f8ec139b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6839:6:3","type":""}],"src":"6741:233:3"},{"body":{"nodeType":"YulBlock","src":"7126:220:3","statements":[{"nodeType":"YulAssignment","src":"7136:74:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7202:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"7207:2:3","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7143:58:3"},"nodeType":"YulFunctionCall","src":"7143:67:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7136:3:3"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7308:3:3"}],"functionName":{"name":"store_literal_in_memory_b8487d002a356d65129c7f2d6a4517d378d929ddd6beeb4c325c1ed9f8ec139b","nodeType":"YulIdentifier","src":"7219:88:3"},"nodeType":"YulFunctionCall","src":"7219:93:3"},"nodeType":"YulExpressionStatement","src":"7219:93:3"},{"nodeType":"YulAssignment","src":"7321:19:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7332:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"7337:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7328:3:3"},"nodeType":"YulFunctionCall","src":"7328:12:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7321:3:3"}]}]},"name":"abi_encode_t_stringliteral_b8487d002a356d65129c7f2d6a4517d378d929ddd6beeb4c325c1ed9f8ec139b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7114:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7122:3:3","type":""}],"src":"6980:366:3"},{"body":{"nodeType":"YulBlock","src":"7523:248:3","statements":[{"nodeType":"YulAssignment","src":"7533:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7545:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7556:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7541:3:3"},"nodeType":"YulFunctionCall","src":"7541:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7533:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7580:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7591:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7576:3:3"},"nodeType":"YulFunctionCall","src":"7576:17:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7599:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"7605:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7595:3:3"},"nodeType":"YulFunctionCall","src":"7595:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7569:6:3"},"nodeType":"YulFunctionCall","src":"7569:47:3"},"nodeType":"YulExpressionStatement","src":"7569:47:3"},{"nodeType":"YulAssignment","src":"7625:139:3","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7759:4:3"}],"functionName":{"name":"abi_encode_t_stringliteral_b8487d002a356d65129c7f2d6a4517d378d929ddd6beeb4c325c1ed9f8ec139b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7633:124:3"},"nodeType":"YulFunctionCall","src":"7633:131:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7625:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_b8487d002a356d65129c7f2d6a4517d378d929ddd6beeb4c325c1ed9f8ec139b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7503:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7518:4:3","type":""}],"src":"7352:419:3"},{"body":{"nodeType":"YulBlock","src":"7805:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7822:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7825:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7815:6:3"},"nodeType":"YulFunctionCall","src":"7815:88:3"},"nodeType":"YulExpressionStatement","src":"7815:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7919:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7922:4:3","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7912:6:3"},"nodeType":"YulFunctionCall","src":"7912:15:3"},"nodeType":"YulExpressionStatement","src":"7912:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7943:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7946:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7936:6:3"},"nodeType":"YulFunctionCall","src":"7936:15:3"},"nodeType":"YulExpressionStatement","src":"7936:15:3"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7777:180:3"},{"body":{"nodeType":"YulBlock","src":"7991:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8008:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8011:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8001:6:3"},"nodeType":"YulFunctionCall","src":"8001:88:3"},"nodeType":"YulExpressionStatement","src":"8001:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8105:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8108:4:3","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8098:6:3"},"nodeType":"YulFunctionCall","src":"8098:15:3"},"nodeType":"YulExpressionStatement","src":"8098:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8129:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8132:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8122:6:3"},"nodeType":"YulFunctionCall","src":"8122:15:3"},"nodeType":"YulExpressionStatement","src":"8122:15:3"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7963:180:3"},{"body":{"nodeType":"YulBlock","src":"8194:32:3","statements":[{"nodeType":"YulAssignment","src":"8204:16:3","value":{"name":"value","nodeType":"YulIdentifier","src":"8215:5:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8204:7:3"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8176:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8186:7:3","type":""}],"src":"8149:77:3"},{"body":{"nodeType":"YulBlock","src":"8275:190:3","statements":[{"nodeType":"YulAssignment","src":"8285:33:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8312:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8294:17:3"},"nodeType":"YulFunctionCall","src":"8294:24:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8285:5:3"}]},{"body":{"nodeType":"YulBlock","src":"8408:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8410:16:3"},"nodeType":"YulFunctionCall","src":"8410:18:3"},"nodeType":"YulExpressionStatement","src":"8410:18:3"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8333:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"8340:66:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8330:2:3"},"nodeType":"YulFunctionCall","src":"8330:77:3"},"nodeType":"YulIf","src":"8327:103:3"},{"nodeType":"YulAssignment","src":"8439:20:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8450:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"8457:1:3","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8446:3:3"},"nodeType":"YulFunctionCall","src":"8446:13:3"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8439:3:3"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8261:5:3","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8271:3:3","type":""}],"src":"8232:233:3"},{"body":{"nodeType":"YulBlock","src":"8516:146:3","statements":[{"nodeType":"YulAssignment","src":"8526:25:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8549:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8531:17:3"},"nodeType":"YulFunctionCall","src":"8531:20:3"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8526:1:3"}]},{"nodeType":"YulAssignment","src":"8560:25:3","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8583:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8565:17:3"},"nodeType":"YulFunctionCall","src":"8565:20:3"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8560:1:3"}]},{"body":{"nodeType":"YulBlock","src":"8607:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8609:16:3"},"nodeType":"YulFunctionCall","src":"8609:18:3"},"nodeType":"YulExpressionStatement","src":"8609:18:3"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8601:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"8604:1:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8598:2:3"},"nodeType":"YulFunctionCall","src":"8598:8:3"},"nodeType":"YulIf","src":"8595:34:3"},{"nodeType":"YulAssignment","src":"8639:17:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8651:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"8654:1:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8647:3:3"},"nodeType":"YulFunctionCall","src":"8647:9:3"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8639:4:3"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8502:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"8505:1:3","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8511:4:3","type":""}],"src":"8471:191:3"},{"body":{"nodeType":"YulBlock","src":"8696:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8713:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8716:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8706:6:3"},"nodeType":"YulFunctionCall","src":"8706:88:3"},"nodeType":"YulExpressionStatement","src":"8706:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8810:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8813:4:3","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8803:6:3"},"nodeType":"YulFunctionCall","src":"8803:15:3"},"nodeType":"YulExpressionStatement","src":"8803:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8834:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8837:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8827:6:3"},"nodeType":"YulFunctionCall","src":"8827:15:3"},"nodeType":"YulExpressionStatement","src":"8827:15:3"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"8668:180:3"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b8487d002a356d65129c7f2d6a4517d378d929ddd6beeb4c325c1ed9f8ec139b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AdminRole: caller does not have \")\n\n        mstore(add(memPtr, 32), \"the Admin role\")\n\n    }\n\n    function abi_encode_t_stringliteral_b8487d002a356d65129c7f2d6a4517d378d929ddd6beeb4c325c1ed9f8ec139b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_b8487d002a356d65129c7f2d6a4517d378d929ddd6beeb4c325c1ed9f8ec139b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b8487d002a356d65129c7f2d6a4517d378d929ddd6beeb4c325c1ed9f8ec139b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b8487d002a356d65129c7f2d6a4517d378d929ddd6beeb4c325c1ed9f8ec139b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100625760003560e01c80631785f53c1461006757806324d7806c146100835780632c9ab42b146100b357806340f32be6146100cf57806370480275146100ed5780638bad0c0a14610109575b600080fd5b610081600480360381019061007c919061071d565b610113565b005b61009d6004803603810190610098919061071d565b610167565b6040516100aa9190610765565b60405180910390f35b6100cd60048036038101906100c891906108d9565b610184565b005b6100d7610212565b6040516100e491906109e0565b60405180910390f35b6101076004803603810190610102919061071d565b6102f4565b005b610111610348565b005b61011c33610167565b61015b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015290610a85565b60405180910390fd5b61016481610353565b50565b600061017d8260006103ae90919063ffffffff16565b9050919050565b61018d33610167565b6101cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c390610a85565b60405180910390fd5b60005b815181101561020e576101fb8282815181106101ee576101ed610aa5565b5b60200260200101516102f4565b808061020690610b0d565b9150506101cf565b5050565b606061021e60006103de565b67ffffffffffffffff81111561023757610236610796565b5b6040519080825280602002602001820160405280156102655781602001602082028036833780820191505090505b50905060005b61027560006103de565b8110156102f0576102908160006103f390919063ffffffff16565b8282815181106102a3576102a2610aa5565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806102e890610b0d565b91505061026b565b5090565b6102fd33610167565b61033c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033390610a85565b60405180910390fd5b6103458161040d565b50565b61035133610353565b565b61036781600061046890919063ffffffff16565b508073ffffffffffffffffffffffffffffffffffffffff167fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f60405160405180910390a250565b60006103d6836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610498565b905092915050565b60006103ec826000016104bb565b9050919050565b600061040283600001836104cc565b60001c905092915050565b6104218160006104f790919063ffffffff16565b508073ffffffffffffffffffffffffffffffffffffffff167f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33960405160405180910390a250565b6000610490836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610527565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b60008260000182815481106104e4576104e3610aa5565b5b9060005260206000200154905092915050565b600061051f836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61063b565b905092915050565b6000808360010160008481526020019081526020016000205490506000811461062f5760006001826105599190610b55565b90506000600186600001805490506105719190610b55565b90508181146105e057600086600001828154811061059257610591610aa5565b5b90600052602060002001549050808760000184815481106105b6576105b5610aa5565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806105f4576105f3610b89565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610635565b60009150505b92915050565b60006106478383610498565b6106a05782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506106a5565b600090505b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106ea826106bf565b9050919050565b6106fa816106df565b811461070557600080fd5b50565b600081359050610717816106f1565b92915050565b600060208284031215610733576107326106b5565b5b600061074184828501610708565b91505092915050565b60008115159050919050565b61075f8161074a565b82525050565b600060208201905061077a6000830184610756565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107ce82610785565b810181811067ffffffffffffffff821117156107ed576107ec610796565b5b80604052505050565b60006108006106ab565b905061080c82826107c5565b919050565b600067ffffffffffffffff82111561082c5761082b610796565b5b602082029050602081019050919050565b600080fd5b600061085561085084610811565b6107f6565b905080838252602082019050602084028301858111156108785761087761083d565b5b835b818110156108a1578061088d8882610708565b84526020840193505060208101905061087a565b5050509392505050565b600082601f8301126108c0576108bf610780565b5b81356108d0848260208601610842565b91505092915050565b6000602082840312156108ef576108ee6106b5565b5b600082013567ffffffffffffffff81111561090d5761090c6106ba565b5b610919848285016108ab565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610957816106df565b82525050565b6000610969838361094e565b60208301905092915050565b6000602082019050919050565b600061098d82610922565b610997818561092d565b93506109a28361093e565b8060005b838110156109d35781516109ba888261095d565b97506109c583610975565b9250506001810190506109a6565b5085935050505092915050565b600060208201905081810360008301526109fa8184610982565b905092915050565b600082825260208201905092915050565b7f41646d696e526f6c653a2063616c6c657220646f6573206e6f7420686176652060008201527f7468652041646d696e20726f6c65000000000000000000000000000000000000602082015250565b6000610a6f602e83610a02565b9150610a7a82610a13565b604082019050919050565b60006020820190508181036000830152610a9e81610a62565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b6000610b1882610b03565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b4a57610b49610ad4565b5b600182019050919050565b6000610b6082610b03565b9150610b6b83610b03565b925082821015610b7e57610b7d610ad4565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220749f1268488159916731399fd4b995fb804e10e1837d84c3461358e71843b33064736f6c634300080d0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1785F53C EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x2C9AB42B EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x40F32BE6 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x8BAD0C0A EQ PUSH2 0x109 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x167 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x765 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x111 PUSH2 0x348 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11C CALLER PUSH2 0x167 JUMP JUMPDEST PUSH2 0x15B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152 SWAP1 PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x164 DUP2 PUSH2 0x353 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D DUP3 PUSH1 0x0 PUSH2 0x3AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D CALLER PUSH2 0x167 JUMP JUMPDEST PUSH2 0x1CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C3 SWAP1 PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x20E JUMPI PUSH2 0x1FB DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1EE JUMPI PUSH2 0x1ED PUSH2 0xAA5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2F4 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x206 SWAP1 PUSH2 0xB0D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1CF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x21E PUSH1 0x0 PUSH2 0x3DE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x237 JUMPI PUSH2 0x236 PUSH2 0x796 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x265 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0x275 PUSH1 0x0 PUSH2 0x3DE JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2F0 JUMPI PUSH2 0x290 DUP2 PUSH1 0x0 PUSH2 0x3F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A3 JUMPI PUSH2 0x2A2 PUSH2 0xAA5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x2E8 SWAP1 PUSH2 0xB0D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x26B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x2FD CALLER PUSH2 0x167 JUMP JUMPDEST PUSH2 0x33C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x333 SWAP1 PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x345 DUP2 PUSH2 0x40D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x351 CALLER PUSH2 0x353 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x367 DUP2 PUSH1 0x0 PUSH2 0x468 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D6 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x498 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC DUP3 PUSH1 0x0 ADD PUSH2 0x4BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x402 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x421 DUP2 PUSH1 0x0 PUSH2 0x4F7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x44D6D25963F097AD14F29F06854A01F575648A1EF82F30E562CCD3889717E339 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x490 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x527 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4E4 JUMPI PUSH2 0x4E3 PUSH2 0xAA5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51F DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x63B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x62F JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x559 SWAP2 SWAP1 PUSH2 0xB55 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x571 SWAP2 SWAP1 PUSH2 0xB55 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x592 JUMPI PUSH2 0x591 PUSH2 0xAA5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x5B6 JUMPI PUSH2 0x5B5 PUSH2 0xAA5 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x5F4 JUMPI PUSH2 0x5F3 PUSH2 0xB89 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x635 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x647 DUP4 DUP4 PUSH2 0x498 JUMP JUMPDEST PUSH2 0x6A0 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EA DUP3 PUSH2 0x6BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FA DUP2 PUSH2 0x6DF JUMP JUMPDEST DUP2 EQ PUSH2 0x705 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x717 DUP2 PUSH2 0x6F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x733 JUMPI PUSH2 0x732 PUSH2 0x6B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x741 DUP5 DUP3 DUP6 ADD PUSH2 0x708 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75F DUP2 PUSH2 0x74A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x77A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x7CE DUP3 PUSH2 0x785 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x7ED JUMPI PUSH2 0x7EC PUSH2 0x796 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x800 PUSH2 0x6AB JUMP JUMPDEST SWAP1 POP PUSH2 0x80C DUP3 DUP3 PUSH2 0x7C5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x82C JUMPI PUSH2 0x82B PUSH2 0x796 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x855 PUSH2 0x850 DUP5 PUSH2 0x811 JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x878 JUMPI PUSH2 0x877 PUSH2 0x83D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8A1 JUMPI DUP1 PUSH2 0x88D DUP9 DUP3 PUSH2 0x708 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x87A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8C0 JUMPI PUSH2 0x8BF PUSH2 0x780 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x842 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8EF JUMPI PUSH2 0x8EE PUSH2 0x6B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x90D JUMPI PUSH2 0x90C PUSH2 0x6BA JUMP JUMPDEST JUMPDEST PUSH2 0x919 DUP5 DUP3 DUP6 ADD PUSH2 0x8AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x957 DUP2 PUSH2 0x6DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x969 DUP4 DUP4 PUSH2 0x94E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98D DUP3 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x997 DUP2 DUP6 PUSH2 0x92D JUMP JUMPDEST SWAP4 POP PUSH2 0x9A2 DUP4 PUSH2 0x93E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9D3 JUMPI DUP2 MLOAD PUSH2 0x9BA DUP9 DUP3 PUSH2 0x95D JUMP JUMPDEST SWAP8 POP PUSH2 0x9C5 DUP4 PUSH2 0x975 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x9A6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9FA DUP2 DUP5 PUSH2 0x982 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E526F6C653A2063616C6C657220646F6573206E6F74206861766520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7468652041646D696E20726F6C65000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6F PUSH1 0x2E DUP4 PUSH2 0xA02 JUMP JUMPDEST SWAP2 POP PUSH2 0xA7A DUP3 PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA9E DUP2 PUSH2 0xA62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB18 DUP3 PUSH2 0xB03 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xB4A JUMPI PUSH2 0xB49 PUSH2 0xAD4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB60 DUP3 PUSH2 0xB03 JUMP JUMPDEST SWAP2 POP PUSH2 0xB6B DUP4 PUSH2 0xB03 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xB7E JUMPI PUSH2 0xB7D PUSH2 0xAD4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x9F1268488159916731399FD4B995FB804E10E1837D DUP5 0xC3 CHAINID SGT PC 0xE7 XOR NUMBER 0xB3 ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ","sourceMap":"146:1480:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1196:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;578:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;930:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;694:230;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1103:87;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1295:73;;;:::i;:::-;;1196:93;463:19;471:10;463:7;:19::i;:::-;442:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;1261:21:::1;1274:7;1261:12;:21::i;:::-;1196:93:::0;:::o;578:110::-;633:4;656:25;673:7;656;:16;;:25;;;;:::i;:::-;649:32;;578:110;;;:::o;930:167::-;463:19;471:10;463:7;:19::i;:::-;442:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;1009:9:::1;1005:86;1026:7;:14;1022:1;:18;1005:86;;;1060:20;1069:7;1077:1;1069:10;;;;;;;;:::i;:::-;;;;;;;;1060:8;:20::i;:::-;1042:3;;;;;:::i;:::-;;;;1005:86;;;;930:167:::0;:::o;694:230::-;736:23;794:16;:7;:14;:16::i;:::-;780:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;771:40;;826:9;821:97;845:16;:7;:14;:16::i;:::-;841:1;:20;821:97;;;894:13;905:1;894:7;:10;;:13;;;;:::i;:::-;882:6;889:1;882:9;;;;;;;;:::i;:::-;;;;;;;:25;;;;;;;;;;;863:3;;;;;:::i;:::-;;;;821:97;;;;694:230;:::o;1103:87::-;463:19;471:10;463:7;:19::i;:::-;442:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;1165:18:::1;1175:7;1165:9;:18::i;:::-;1103:87:::0;:::o;1295:73::-;1337:24;1350:10;1337:12;:24::i;:::-;1295:73::o;1500:124::-;1558:23;1573:7;1558;:14;;:23;;;;:::i;:::-;;1609:7;1596:21;;;;;;;;;;;;1500:124;:::o;8871:165:0:-;8951:4;8974:55;8984:3;:10;;9020:5;9004:23;;8996:32;;8974:9;:55::i;:::-;8967:62;;8871:165;;;;:::o;9117:115::-;9180:7;9206:19;9214:3;:10;;9206:7;:19::i;:::-;9199:26;;9117:115;;;:::o;9574:156::-;9648:7;9698:22;9702:3;:10;;9714:5;9698:3;:22::i;:::-;9690:31;;9667:56;;9574:156;;;;:::o;1374:116:2:-;1429:20;1441:7;1429;:11;;:20;;;;:::i;:::-;;1475:7;1464:19;;;;;;;;;;;;1374:116;:::o;8634:156:0:-;8707:4;8730:53;8738:3;:10;;8774:5;8758:23;;8750:32;;8730:7;:53::i;:::-;8723:60;;8634:156;;;;:::o;4266:127::-;4339:4;4385:1;4362:3;:12;;:19;4375:5;4362:19;;;;;;;;;;;;:24;;4355:31;;4266:127;;;;:::o;4474:107::-;4530:7;4556:3;:11;;:18;;;;4549:25;;4474:107;;;:::o;4923:118::-;4990:7;5016:3;:11;;5028:5;5016:18;;;;;;;;:::i;:::-;;;;;;;;;;5009:25;;4923:118;;;;:::o;8316:150::-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;:50::i;:::-;8402:57;;8316:150;;;;:::o;2797:1388::-;2863:4;2979:18;3000:3;:12;;:19;3013:5;3000:19;;;;;;;;;;;;2979:40;;3048:1;3034:10;:15;3030:1149;;3403:21;3440:1;3427:10;:14;;;;:::i;:::-;3403:38;;3455:17;3496:1;3475:3;:11;;:18;;;;:22;;;;:::i;:::-;3455:42;;3529:13;3516:9;:26;3512:398;;3562:17;3582:3;:11;;3594:9;3582:22;;;;;;;;:::i;:::-;;;;;;;;;;3562:42;;3733:9;3704:3;:11;;3716:13;3704:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3842:10;3816:3;:12;;:23;3829:9;3816:23;;;;;;;;;;;:36;;;;3544:366;3512:398;3988:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4080:3;:12;;:19;4093:5;4080:19;;;;;;;;;;;4073:26;;;4121:4;4114:11;;;;;;;3030:1149;4163:5;4156:12;;;2797:1388;;;;;:::o;2225:404::-;2288:4;2309:21;2319:3;2324:5;2309:9;:21::i;:::-;2304:319;;2346:3;:11;;2363:5;2346:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2526:3;:11;;:18;;;;2504:3;:12;;:19;2517:5;2504:19;;;;;;;;;;;:40;;;;2565:4;2558:11;;;;2304:319;2607:5;2600:12;;2225:404;;;;;:::o;7:75:3:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:117::-;1712:1;1709;1702:12;1726:102;1767:6;1818:2;1814:7;1809:2;1802:5;1798:14;1794:28;1784:38;;1726:102;;;:::o;1834:180::-;1882:77;1879:1;1872:88;1979:4;1976:1;1969:15;2003:4;2000:1;1993:15;2020:281;2103:27;2125:4;2103:27;:::i;:::-;2095:6;2091:40;2233:6;2221:10;2218:22;2197:18;2185:10;2182:34;2179:62;2176:88;;;2244:18;;:::i;:::-;2176:88;2284:10;2280:2;2273:22;2063:238;2020:281;;:::o;2307:129::-;2341:6;2368:20;;:::i;:::-;2358:30;;2397:33;2425:4;2417:6;2397:33;:::i;:::-;2307:129;;;:::o;2442:311::-;2519:4;2609:18;2601:6;2598:30;2595:56;;;2631:18;;:::i;:::-;2595:56;2681:4;2673:6;2669:17;2661:25;;2741:4;2735;2731:15;2723:23;;2442:311;;;:::o;2759:117::-;2868:1;2865;2858:12;2899:710;2995:5;3020:81;3036:64;3093:6;3036:64;:::i;:::-;3020:81;:::i;:::-;3011:90;;3121:5;3150:6;3143:5;3136:21;3184:4;3177:5;3173:16;3166:23;;3237:4;3229:6;3225:17;3217:6;3213:30;3266:3;3258:6;3255:15;3252:122;;;3285:79;;:::i;:::-;3252:122;3400:6;3383:220;3417:6;3412:3;3409:15;3383:220;;;3492:3;3521:37;3554:3;3542:10;3521:37;:::i;:::-;3516:3;3509:50;3588:4;3583:3;3579:14;3572:21;;3459:144;3443:4;3438:3;3434:14;3427:21;;3383:220;;;3387:21;3001:608;;2899:710;;;;;:::o;3632:370::-;3703:5;3752:3;3745:4;3737:6;3733:17;3729:27;3719:122;;3760:79;;:::i;:::-;3719:122;3877:6;3864:20;3902:94;3992:3;3984:6;3977:4;3969:6;3965:17;3902:94;:::i;:::-;3893:103;;3709:293;3632:370;;;;:::o;4008:539::-;4092:6;4141:2;4129:9;4120:7;4116:23;4112:32;4109:119;;;4147:79;;:::i;:::-;4109:119;4295:1;4284:9;4280:17;4267:31;4325:18;4317:6;4314:30;4311:117;;;4347:79;;:::i;:::-;4311:117;4452:78;4522:7;4513:6;4502:9;4498:22;4452:78;:::i;:::-;4442:88;;4238:302;4008:539;;;;:::o;4553:114::-;4620:6;4654:5;4648:12;4638:22;;4553:114;;;:::o;4673:184::-;4772:11;4806:6;4801:3;4794:19;4846:4;4841:3;4837:14;4822:29;;4673:184;;;;:::o;4863:132::-;4930:4;4953:3;4945:11;;4983:4;4978:3;4974:14;4966:22;;4863:132;;;:::o;5001:108::-;5078:24;5096:5;5078:24;:::i;:::-;5073:3;5066:37;5001:108;;:::o;5115:179::-;5184:10;5205:46;5247:3;5239:6;5205:46;:::i;:::-;5283:4;5278:3;5274:14;5260:28;;5115:179;;;;:::o;5300:113::-;5370:4;5402;5397:3;5393:14;5385:22;;5300:113;;;:::o;5449:732::-;5568:3;5597:54;5645:5;5597:54;:::i;:::-;5667:86;5746:6;5741:3;5667:86;:::i;:::-;5660:93;;5777:56;5827:5;5777:56;:::i;:::-;5856:7;5887:1;5872:284;5897:6;5894:1;5891:13;5872:284;;;5973:6;5967:13;6000:63;6059:3;6044:13;6000:63;:::i;:::-;5993:70;;6086:60;6139:6;6086:60;:::i;:::-;6076:70;;5932:224;5919:1;5916;5912:9;5907:14;;5872:284;;;5876:14;6172:3;6165:10;;5573:608;;;5449:732;;;;:::o;6187:373::-;6330:4;6368:2;6357:9;6353:18;6345:26;;6417:9;6411:4;6407:20;6403:1;6392:9;6388:17;6381:47;6445:108;6548:4;6539:6;6445:108;:::i;:::-;6437:116;;6187:373;;;;:::o;6566:169::-;6650:11;6684:6;6679:3;6672:19;6724:4;6719:3;6715:14;6700:29;;6566:169;;;;:::o;6741:233::-;6881:34;6877:1;6869:6;6865:14;6858:58;6950:16;6945:2;6937:6;6933:15;6926:41;6741:233;:::o;6980:366::-;7122:3;7143:67;7207:2;7202:3;7143:67;:::i;:::-;7136:74;;7219:93;7308:3;7219:93;:::i;:::-;7337:2;7332:3;7328:12;7321:19;;6980:366;;;:::o;7352:419::-;7518:4;7556:2;7545:9;7541:18;7533:26;;7605:9;7599:4;7595:20;7591:1;7580:9;7576:17;7569:47;7633:131;7759:4;7633:131;:::i;:::-;7625:139;;7352:419;;;:::o;7777:180::-;7825:77;7822:1;7815:88;7922:4;7919:1;7912:15;7946:4;7943:1;7936:15;7963:180;8011:77;8008:1;8001:88;8108:4;8105:1;8098:15;8132:4;8129:1;8122:15;8149:77;8186:7;8215:5;8204:16;;8149:77;;;:::o;8232:233::-;8271:3;8294:24;8312:5;8294:24;:::i;:::-;8285:33;;8340:66;8333:5;8330:77;8327:103;;8410:18;;:::i;:::-;8327:103;8457:1;8450:5;8446:13;8439:20;;8232:233;;;:::o;8471:191::-;8511:4;8531:20;8549:1;8531:20;:::i;:::-;8526:25;;8565:20;8583:1;8565:20;:::i;:::-;8560:25;;8604:1;8601;8598:8;8595:34;;;8609:18;;:::i;:::-;8595:34;8654:1;8651;8647:9;8639:17;;8471:191;;;;:::o;8668:180::-;8716:77;8713:1;8706:88;8813:4;8810:1;8803:15;8837:4;8834:1;8827:15"},"methodIdentifiers":{"addAdmin(address)":"70480275","allAdmins()":"40f32be6","batchAddAdmin(address[])":"2c9ab42b","isAdmin(address)":"24d7806c","removeAdmin(address)":"1785f53c","renounceAdmin()":"8bad0c0a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AdminRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allAdmins\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"amounts\",\"type\":\"address[]\"}],\"name\":\"batchAddAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RoleAccess.sol\":\"AdminRoleUpgrade\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]},\"contracts/RoleAccess.sol\":{\"keccak256\":\"0x32859a778298995e1f007f227ba88a845b03a8eddf06944281396ad2ab328553\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0eef3f69e18c538ecdb9e4655fa0f943270d7b65678895ab7d3be35a66d01d97\",\"dweb:/ipfs/QmVZEGW5BL64Af4Y2gNSbTa32pEB4MSGkU8uJWTCWn1gS9\"]}},\"version\":1}"}}}}}